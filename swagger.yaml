openapi: 3.0.0
info:
  title: TaroWorks API 
  version: 1.0.0
servers:
  - url: http://instance.develop.my.salesforce.com
paths:
  /services/oauth2/token:
    post:
      operationId: login
      tags:
        - default
      summary: Login - get access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
      security:
        - noauthAuth: []
      parameters:
        - name: grant_type
          in: query
          schema:
            type: string
          example: password
        - name: client_id
          in: query
          schema:
            type: string
          example: '{{clientid}}'
        - name: client_secret
          in: query
          schema:
            type: string
          example: '{{client_secret}}'
        - name: username
          in: query
          schema:
            type: string
          example: '{{username}}'
        - name: password
          in: query
          schema:
            type: string
          example: '{{password}}{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credentials"
  /services/apexrest/twapi/formdata/v1:
    put:
      operationId: upsertForms
      tags:
        - default
      summary: Form - upsert one or multiple forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutFormData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getForms
      tags:
        - default
      summary: Form - get by limit and offset, name, or ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: GetFormData
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: name
          in: query
          schema:
            type: string
          example: my form
        - name: id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormSearch"
    delete:
      operationId: deleteForm
      tags:
        - default
      summary: Form - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_form_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/twapi/questiondata/v1:
    put:
      operationId: upsertQuestions
      tags:
        - default
      summary: Question - create one or more questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutQuestionData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getQuestions
      tags:
        - default
      summary: Question - get by limit and offset, name, or ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: GetQuestionData
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '17'
        - name: id
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: formVersionId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: formId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/QuestionSearch" 
    delete:
      operationId: deleteQuestion
      tags:
        - default
      summary: Question - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_question_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/twapi/formmappingdata/v1:
    get:
      operationId: getFormMapping
      tags:
        - default
      summary: Form/Field Mapping - Get by formId
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: GetFormMappingData
        - name: formId
          in: query
          schema:
            type: string
          example: a0hDn000000gLXeIAM
        - name: formVersionId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: id
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: offset
          in: query
          schema:
            type: integer
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          example: "10"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormMappingSearch"
    put:
      operationId: upsertFormMapping
      tags:
        - default
      summary: Form/Field Mapping - Insert New Form Mapping and Field Mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormMappingRecords" 
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutFormMappingData
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseArray"
    delete:
      operationId: deleteFormMapping
      tags:
        - default
      summary: Form Mapping - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_form_mapping_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/twapi/skiplogicdata/v1/:
    put:
      operationId: upsertSkipLogic
      tags:
        - default
      summary: Skip Logic - create/update SkipLogic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkipLogicRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutSkipLogicData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getSkipLogics
      tags:
        - default
      summary: Skip Logic - Get by Limit and Offset
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: GetSkipLogicData
        - name: formVersionId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: id
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: offset
          in: query
          schema:
            type: integer
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          example: "10"
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/SkipLogicSearch" 
    delete:
      operationId: deleteSkipLogic
      tags:
        - default
      summary: Skip Logic - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_skip_logic_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/twapi/objectrelationshipmappingdata/v1:
    put:
      operationId: upsertObjectMapping
      tags:
        - default
      summary: ORM - insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectRelationshipMappingRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutObjectRelationshipMappingData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getObjectMapping
      tags:
        - default
      summary: ORM - get by Id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: GetObjectRelationshipMappingData
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_orm}}'
        - name: formVersionId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: formId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: offset
          in: query
          schema:
            type: integer
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          example: "10"
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ObjectRelationshipMappingSearch" 
    delete:
      operationId: deleteObjectMapping
      tags:
        - default
      summary: ORM - delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_orm}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
  schemas:
    FormRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/Form"
    QuestionRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/Question"
    SkipLogicRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/SkipLogic"
    FormMappingRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/FormMapping" 
    ObjectRelationshipMappingRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/ObjectRelationshipMapping"
    FormSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/Form"
      required:
        - filteredCount
        - unfilteredCount
        - records
    QuestionSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/Question"
      required:
        - filteredCount
        - unfilteredCount
        - records
    SkipLogicSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/SkipLogic"
      required:
        - filteredCount
        - unfilteredCount
        - records
    FormMappingSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/FormMapping"
      required:
        - filteredCount
        - unfilteredCount
        - records
    ObjectRelationshipMappingSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/ObjectRelationshipMapping"
      required:
        - filteredCount
        - unfilteredCount
        - records
    Form:
      properties:
        externalId: 
          type: string
          example: '{{formtimestamp}}'
          description: UniqueID from the external system.
        id: 
          type: string
          example: "a0hDH0000069hqHYAQ"
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
        name: 
          type: string
          example: demo {{formtimestamp}}
          description: user-visible form name
        alias: 
          type: string
          example: demo {{formtimestamp}}
          description: The alias of the form, displayed to the admin user.
        messageAfterSubmission: 
          type: string
          example: Thank you for taking the time to complete this form!
          description: User-visible message on form completion
        description: 
          type: string
          example: This form was inserted through API on {{$timestamp}}
          description: admin-visible form description
        status: 
          type: string
          example: "Draft"
          description: Must be Draft or Updating
          enum: [
                  Draft, 
                  Updating, 
                  Published,
                  Closed
                ]
        formVersion:
          type: array
          items:
            $ref: "#/components/schemas/FormVersion"
    FormVersion:
      properties:
            versionid: 
              type: string
              description: SalesForce-generated VersionID of the form. This gets changed when you change the form state (like pressing "Publish" on a Draft Form)
              example: "a0hDH0000069hqHYAQ"
            changeLogNumber: 
              type: string
              example: "10"
              description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
    Question:
      properties:
          externalId: 
            type: string
            description: UniqueID from the external system.
            example: '{{formtimestamp}}S1'
          id: 
            type: string
            description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
            example: ""
          name: 
            type: string
            description: Name of the Question, used for internal references to this question.
            example: main family member
          caption: 
            type: string
            description: Name of the Question, visible to the App User.
            example: Main Family Member
          cascadingLevel: 
            type: string
            description: Used for cascading select questions - if this is a cascading select, use this to show the level in the cascading hierarcy.
            example: ""
          options: 
            type: array
            items:
              $ref: "#/components/schemas/Options"
          cascadingSelect: 
            type: string
            description: The Cascading Select that this question represents(only if the question is of cascading type)
            example: "{{cascadingSelectID}}"
          controllingQuestion: 
            type: string
            description: Only for Cascading Select - the controlling question of this question.
            example: ""
          displayRepeatSectionInTable: 
            type: boolean
            description: If this question is a repeat section, whether the repeat section is a table or not.  
            example: false
          dynamicOperationType: 
            type: string
            description: Calculation or Validation dynamic operation
            example: ""
          exampleOfValidResponse: 
            type: string
            description: Holds example of valid regular expression entered in response validation
            example: ""
          form: 
            type: string
            description: Which form this question is part of.
            example: '{{new_form_id}}'
          formVersion: 
            type: string
            description: Which form version this question is part of.
            example: '{{current_form_versionid}}'
          hidden: 
            type: boolean
            description: Whether to display the question to the app user or not.
            example: false
          maximum: 
            type: number 
            description: For Number questions - the maximum allowed value
            example: 0
          minimum: 
            type: number
            description: For Number questions - the minimum allowed value
            example: 10
          parent: 
            type: string
            description: Sections are parent questions. If a question has a parent, then it sits inside that section; if a question has no parent, then that question is a section.
            example: ""
          position: 
            type: integer
            description: Position of a question inside a section
            example: 1
          previousVersion: 
            type: string
            description: The previous form version for this question.
            example: ""
          printAnswer: 
            type: boolean
            description: Print answer(s) to mobile users
            example: false
          repeatSourceValue: 
            type: string
            description: Used for repeat section mapping - the controlling question sets the number of times that a repeat question is repeated.
            example: ""
          repeatTimes: 
            type: string
            description: Number of times to repeat
            example: ""
          required: 
            type: boolean
            description: Whether the question is required (app will not proceed without a value filled in for this question)
            example: true
          responseValidation: 
            type: string
            description: Any response validations to apply to this question (dynamic operations)
            example: ""
          showAllQuestionOnOnePage: 
            type: boolean
            description: For sections - whether to show all questions on one page or not
            example: false
          skipLogicBehavior: 
            type: string
            description: Shows up on the skip logic UI - what should happen if skip logic is fired
            example: Show
            enum: [Show, Hide]
          skipLogicOperator: 
            type: string
            description: Whether the skip logic is "All" or "Any"
            example: All
            enum: [All, Any]
          hint: 
            type: string
            description: The hint to display to the app user for this question
            example: ""
          testDynamicOperation: 
            type: boolean
            description: Whether to test the dynamic operations or not.
            example: false
          type: 
            type: string
            description: Type of the question. Allowed values are
            enum: ['section',
                    'text-short',
                    'text-long',
                    'number',
                    'number-integer',
                    'number-decimal',
                    'date-date',
                    'date-datetime',
                    'barcode',
                    'radio',
                    'checkbox',
                    'static-content',
                    'end_of_survey',
                    'picture',
                    'capture-audio',
                    'capture-video',
                    'signature',
                    'cascading-level',
                    'gps-location'
                    ]
            example: section
          useCurrentTimeAsDefault: 
            type: boolean
            description: Set date of the day and current time(take from device) as initial value
            example: false
          changeLogNumber: 
            type: string
            description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
            example: '{{current_form_change_log_number}}' 
    SkipLogic:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system. 
          example: '{{formtimestamp}}123467'
        form: 
          type: string
          description: Which form this skip logic is part of.
          example: '{{new_form_id}}'
        formVersion: 
          type: string
          description: Which form version this skip logic is part of.
          example: '{{current_form_versionid}}'
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        parentQuestion: 
          type: string
          description: The question that should be skipped based on this skip logic.
          example: '{{current_occupation_question_id}}'
        sourceQuestion: 
          type: string
          description: The question that is used to determine if the parent question should be skipped.
          example: '{{current_integer_question_id}}'
        negate: 
          type: string
          description: Whether the condition is negated 
          example: "false"
        condition: 
          type: string
          description: Allowable conditions for the skip logic to be fired. 
          example: Answered
          enum: ["Is","Answered","LesserThan","GreaterThan","InRange"]
        skipValue:
          type: string
          description: Explicit value to use with "Is" condition
          example: "testing"
    FormMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}FM1'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: new name
        form: 
          type: string
          description: Which form this Form Mapping is part of.
          example: '{{new_form_id}}'
        formVersion: 
          type: string
          description: Which form version this form mapping is part of.
          example: '{{current_form_versionid}}'
        formVersionMappingField: 
          type: string
          description: Api Field Name of the mapped object to save the Form Version data
          example: ""
        mobileUserField: 
          type: string
          description: Api Field Name of the mapped object to save the Mobile User data
          example: Name
        objectApiName: 
          type: string
          description: Which Object to use for the form mapping, specified by API Name
          example: Account
        formMappingField: 
          type: string
          description: Api Field Name of the mapped object to save the Form data
          example: ""
        repeat:
          type: string
          description: Which repeat section "id" field to use for this form mapping repeat.
          example: ""
        submissionAPIField: 
          type: string
          description: Api Field Name of the mapped object to save the Submission
          example: ""
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
        questionMappings:
          type: array
          items:
            $ref: "#/components/schemas/QuestionMapping"
        isReference:
          type: boolean
          description: Whether the form mapping is a reference object or not.
          example: false
        matchingField:
          type: string
          description: This field is used to prevent duplicate record creation when users sync data from mobile.
          example: ""
    QuestionMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}2'
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: age_becomes_account_number
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        scoringGroup: 
          type: string
          description: The scoring group used for this question mapping if Scoring is relevant.
          example: ""
        question: 
          type: string
          description: Question "id" field to use for the question mapping
          example: '{{current_integer_question_id}}'
        fieldAPIName: 
          type: string
          description: API Name of the SalesForce object to use for mapping the question.
          example: AccountNumber
    ObjectRelationshipMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}123-orm'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: inserted
        fieldApiName: 
          type: string
          description: Which field in the parent object to relate to the child object.
          example: AccountId
        parentSurveyMapping: 
          type: string
          description: id field of the form mapping to use for the parent object
          example: '{{current_form_mapping_id}}'
        childSurveyMapping: 
          type: string
          description: id field of the form mapping to use for the child object
          example: '{{current_repeat_form_mapping_id}}'
        formVersion: 
          type: string
          description: Which form version this ORM related to.
          example: '{{current_form_versionid}}'
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
    Response:
      properties:
        success:
          type: boolean
          description: Whether this object was created successfully
          example: true
        recordId:
          type: string
          description: SalesForce ID of the created object
          example: a0hDn000000jsRSIAY
        message:
          type: string
          description: Success or failure message
          example: "Form Created Successfully"
        externalId:
          type: string
          description: External ID of the created object
          example: 20221219113625
        changeLogNumber:
          type: integer 
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: 1 
    ResponseArray:
        type: array
        items: 
          $ref: "#/components/schemas/Response"
    Options: 
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}123'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: inserted
        position:
          type: integer
          description: Option position in list
          example: 1
        caption:
          type: string
          description: Value displayed to app user
          example: Female
    Credentials:
      properties:
        access_token:
          type: string
          description: An access token to include with future requests
        instance_url:
          type: string
          example: "http://instance.develop.my.salesforce.com"
          description: The Salesforce instance you're authorized against
        id:
          type: string
          example: "https://login.salesforce.com/id/123/abc"
          description: Your login ID
        token_type:
          type: string
          example: "Bearer"
          description: Type of Token
        issued_at:
          type: string
          example: "1673911057864"
          description: Timestamp of token issue
        signature:
          type: string
          example: "3PiFUIioqKkHpHxUiCCDzpvSiM2F6//w2/CslNTuf+o="
          description: Response signature for verification
      required:
        - access_token
        - instance_url
        - id
        - token_type
        - issued_at
        - signatureopenapi: 3.0.1
info:
  title: Lightning Platform REST API
  description: 'REST API provides you with programmatic access to your data in Salesforce. The flexibility and scalability of REST API make it an excellent choice for integrating Salesforce into your applications and for performing complex operations on a large scale. You can use REST API tools to create, manipulate, and search data in Salesforce by sending HTTP requests to endpoints in Salesforce. Depending on where you send requests, you access and operate on different pieces of information, called resources. Resources include records, query results, metadata, and more. '
  version: '58.0'
servers:
  - url: https://your-instance.salesforce.com/services/data/v58.0
security:
  - bearerAuth: []
  - oAuth2: []
  - openIDConnectDiscovery: []
paths:
  /sobjects/gfsurveys__ObjectRelationshipMapping__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__ObjectRelationshipMapping__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__Option__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__Option__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__QuestionMapping__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__QuestionMapping__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__Question__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__Question__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__SkipCondition__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__SkipCondition__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__SurveyMapping__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__SurveyMapping__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__SurveyVersion__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__SurveyVersion__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
  /sobjects/gfsurveys__Survey__c:
    description: Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.
    get:
      responses:
        '200':
          description: Status Code 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SObjectRootInfo'
        '304':
          description: Status Code 304
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '412':
          description: Status Code 412
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
    post:
      parameters:
        - name: Content-Type
          in: header
          description: 'An optional header, which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gfsurveys__Survey__cSObject'
      responses:
        '201':
          description: Status Code 201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResult'
        '400':
          description: Status Code 400
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Status Code 401
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '403':
          description: Status Code 403
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '404':
          description: Status Code 404
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '405':
          description: Status Code 405
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
        '415':
          description: Status Code 415
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Status Code 500
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '503':
          description: Status Code 503
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestApiError'
components:
  schemas:
    SObjectRootInfo:
      type: object
      properties:
        recentItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        objectDescribe:
          type: object
          properties:
            name:
              type: string
            label:
              type: string
            labelPlural:
              type: string
            keyPrefix:
              type: string
            custom:
              type: boolean
            customSetting:
              type: boolean
            activateable:
              type: boolean
            createable:
              type: boolean
            updateable:
              type: boolean
            deletable:
              type: boolean
            undeletable:
              type: boolean
            mergeable:
              type: boolean
            replicateable:
              type: boolean
            triggerable:
              type: boolean
            queryable:
              type: boolean
            retrieveable:
              type: boolean
            searchable:
              type: boolean
            layoutable:
              type: boolean
            feedEnabled:
              type: boolean
            mruEnabled:
              type: boolean
            hasSubtypes:
              type: boolean
            isSubtype:
              type: boolean
            dataTranslationEnabled:
              type: boolean
            isInterface:
              type: boolean
            deepCloneable:
              type: boolean
            associateEntityType:
              type: string
            associateParentEntity:
              type: string
            deprecatedAndHidden:
              type: boolean
            urls:
              type: object
              additionalProperties:
                type: string
    gfsurveys__SurveyVersion__cSObject:
      type: object
      properties:
        Id:
          type: string
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__Survey__c:
          type: string
          description: Parent Form for this Form Version
        gfsurveys__Change_Log__c:
          type: number
          description: Deprecated, do not use.
        gfsurveys__CloseReason__c:
          type: string
          description: Reason the form version was closed, should be left empty if using the API
        gfsurveys__DisplayScoreOffline__c:
          type: boolean
          description: Display score total(s) to mobile users
        gfsurveys__Distributed__c:
          type: boolean
          description: This flag means that the version could be downloaded by a partner.
        gfsurveys__DistributionDate__c:
          type: string
          description: Indicate the date when the form was distributed.
          format: date-time
        gfsurveys__PrintScore__c:
          type: boolean
          description: Print score total(s) to mobile users
        gfsurveys__Status__c:
          type: string
          description: Status of the form version. Should not be modified through the API, instead use the frontend menus for this.
        gfsurveys__SurveyLibrary__c:
          type: string
          description: The form library that the form version was downloaded from
        gfsurveys__Version__c:
          type: number
          description: Numeric version of the formversion (incremented when new form version is created)
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    gfsurveys__Survey__cSObject:
      type: object
      properties:
        Id:
          type: string
        OwnerId:
          type: string
          description: ID of the assigned owner of the custom object record. If the custom object becomes the detail side of a master-detail relationship, this field is removed, as ownership of the data is controlled by the master object, or by the primary master object for a custom object with two master-detail relationships.Custom objects on the detail side of a master-detail relationship can't have sharing rules, manual sharing, or queues, as these require the Owner field.
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        LastActivityDate:
          type: string
          format: date
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__Alias__c:
          type: string
          description: This is the alias of the Form, displayed to users.
        gfsurveys__AllowAnonymousInterviewee__c:
          type: boolean
          description: Indicate if the Interviewee field can be left blank on the submission (reply anonymously)
        gfsurveys__Close_Message__c:
          type: string
          description: User-visible message on form submission.
        gfsurveys__CountryCode__c:
          type: string
          description: The ISO 3166-1 alpha-2 country code
        gfsurveys__Deployment__c:
          type: string
        gfsurveys__Description__c:
          type: string
          description: Admin-visible form description.
        gfsurveys__Gps_Location_Enabled__c:
          type: boolean
        gfsurveys__Gps_ShowMap__c:
          type: boolean
        gfsurveys__InterviewMapField__c:
          type: string
          description: Indicates which field maps with the interviewee field of the form
        gfsurveys__IsCloned__c:
          type: boolean
        gfsurveys__IsPPI__c:
          type: boolean
          description: Indicates if the form is a Poverty-assessment Tools Form
        gfsurveys__IsTemplate__c:
          type: boolean
          description: Indicates if this form is actually a template. If this is checked then this form cannot be distributed on its own. It must be included into another form
        gfsurveys__LanguageCode__c:
          type: string
        gfsurveys__PPIDataYear__c:
          type: number
          description: Data year for the Poverty-assessment Tools form
        gfsurveys__ParentTemplate__c:
          type: string
          description: The template that this form was created from
        gfsurveys__Password__c:
          type: string
        gfsurveys__PpiIdentifier__c:
          type: string
        gfsurveys__PublishedDate__c:
          type: string
          format: date
        gfsurveys__RemoteCreatorName__c:
          type: string
          description: The name of the person who created the original form on the remote org
        gfsurveys__RemoteId__c:
          type: string
          description: The Id of Form as it is in the org that the form was downloaded from
        gfsurveys__RemoteOrganisation__c:
          type: string
          description: The name of the remote organisation that created the form
        gfsurveys__Saving_XForm__c:
          type: boolean
          description: This field is used only when saving an XForm to avoid the deletion of the XForm in the CleanXForm trigger
        gfsurveys__Status__c:
          type: string
          description: Status of the form. Must be Draft or Updating if the form is being modified through the API.
          enum: [
                  Draft, 
                  Updating, 
                  Published,
                  Closed
                ]
        gfsurveys__SurveyLibrary__c:
          type: string
          description: The form library that the form was downloaded from. Allows easy update
        gfsurveys__TWFolder__c:
          type: string
          description: This field tells that form belongs to which folder
        gfsurveys__Version__c:
          type: number
          description: Version count of the Form
        gfsurveys__XForm_Status__c:
          type: string
          description: XForm status indicates if the version has an xform and if it has customizations
        gfsurveys__QuestionCount__c:
          type: number
        gfsurveys__ResponseCount__c:
          type: number
        gfsurveys__TotalSubmissions__c:
          type: number
        gfsurveys__TotalTargets__c:
          type: number
          description: A sum of all the group targets assigned to this form
        gfsurveys__StatusImage__c:
          type: string
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    RestApiError:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
    gfsurveys__SkipCondition__cSObject:
      type: object
      properties:
        Id:
          type: string
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__Parent__c:
          type: string
          description: Question on which this condition is applied
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__Condition__c:
          type: string
          description: 'Condition to apply to the source question value. Valid choices are: Is, Answered, LesserThan, GreaterThan, InRange'
          enum: ["Is","Answered","LesserThan","GreaterThan","InRange"]
        gfsurveys__Negate__c:
          type: boolean
          description: Determine if the result of the evaluation must be negated (return true instead of false, and back-wise).
        gfsurveys__RemoteId__c:
          type: string
          description: The Id of the Skip Condition as it is in the org that the Skip Condition was downloaded from
        gfsurveys__SkipValue__c:
          type: string
          description: Explicit value to use with "Is" condition
        gfsurveys__SourceQuestion__c:
          type: string
          description: Question whose result will be evaluated to determine if the parent question is shown. This question must be previous to the parent question in the form.
        gfsurveys__SurveyLibrary__c:
          type: string
          description: The Form Library that the Skip Condition was downloaded from
        gfsurveys__Value__c:
          type: string
          description: Value to compare against the source question value.
        gfsurveys__Change_Log__c:
          type: number
          description: Deprecated, do not use.
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    ErrorInfo:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
        fields:
          type: array
          items:
            type: string
        extendedErrorDetails:
          type: array
          items:
            type: object
            properties:
              extendedErrorCode:
                type: string
    gfsurveys__Question__cSObject:
      type: object
      properties:
        Id:
          type: string
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__Survey__c:
          type: string
          description: The parent form this question belongs to
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__Caption__c:
          type: string
          description: The caption of the question
        gfsurveys__CascadingLevel__c:
          type: string
          description: The Cascading Level which this Question belongs to.
        gfsurveys__CascadingSelect__c:
          type: string
          description: The Cascading Select that this question represents(only if the question is of cascading type)
        gfsurveys__ControllingQuestion__c:
          type: string
          description: The controlling question of this question (only for cascading questions)
        gfsurveys__CurrentTime__c:
          type: boolean
          description: Set date of the day and current time(take from device) as initial value
        gfsurveys__DoAfter__c:
          type: string
          description: Deprecated, this should be left empty
        gfsurveys__DoBefore__c:
          type: string
          description: Deprecated, this should be left empty
        gfsurveys__DynamicOperationType__c:
          type: string
          description: JType of Javascript user will enter
        gfsurveys__DynamicOperation__c:
          type: string
          description: Javascript to be added for Validation or Calculation
        gfsurveys__Dynamic_Operation_Test_Data__c:
          type: string
          description: Holds the JSON format of the test data for all questions added in dynamic operation.
        gfsurveys__FromVersion__c:
          type: number
          description: Version that this Question was created from (if the form was published then edited) from if relevant, leave empty if using the API.
        gfsurveys__Hidden__c:
          type: boolean
          description: Mark the question to be hidden on mobile device
        gfsurveys__Hint__c:
          type: string
          description: A hint for the question
        gfsurveys__IsRemoteEditable__c:
          type: boolean
          description: Used for PPI internals, should be left empty for the API.
        gfsurveys__IsRepeatInTable__c:
          type: boolean
          description: Repeat Section to be showed in Tabular format on mobile device
        gfsurveys__MaxInstance__c:
          type: number
          description: Used for removing questions from later form versions, should be left empty if using the API.
        gfsurveys__Maximum__c:
          type: number
          description: For Number questions - the maximum allowed value
        gfsurveys__Minimum__c:
          type: number
          description: For Number questions - the maximum allowed value
        gfsurveys__Parent__c:
          type: string
          description: Sections (regular and repeat) are parent questions. If a question has a parent, then it sits inside that section; if a question has no parent, then that question is a section.
        gfsurveys__Position__c:
          type: number
          description: Position of a question inside a section, or position of a section relative to the other sections.
        gfsurveys__PpiResultsField__c:
          type: string
          description: PPI results, should be left empty if using the API
        gfsurveys__PreviousVersionQuestion__c:
          type: string
          description: ID of the previous question for old form versions, if relevant. Should be left empty if using the API.
        gfsurveys__PrintAnswer__c:
          type: boolean
          description: Print answer(s) to mobile users
        gfsurveys__RemoteId__c:
          type: string
          description: The Id of Question as it is in the org that the form was downloaded from
        gfsurveys__RemoteServerId__c:
          type: string
          description: Deprecated. Use RemoteId__c as it is indexed
        gfsurveys__RepeatSourceValue__c:
          type: string
          description: The Source Question to determine the times a repeated question must be repeated
        gfsurveys__RepeatTimes__c:
          type: number
          description: This component was deprecated in TaroWorks version 7.1.2 and is no longer in use. The number of times that a question must repeat
        gfsurveys__Require_Live_Photo__c:
          type: boolean
          description: The mobile user will not be able to choose an image from gallery for this question.
        gfsurveys__Required__c:
          type: boolean
          description: Check if this question must be answered before moving to the next question
        gfsurveys__ResponseValidationExample__c:
          type: string
          description: Holds example of valid regular expression entered in response validation
        gfsurveys__ResponseValidation__c:
          type: string
          description: Regex constraint to be added on text or barcode type questions for validation purpose
        gfsurveys__SamePage__c:
          type: boolean
          description: All questions of a section show on same page
        gfsurveys__SkipLogicBehavior__c:
          type: string
          description: Shows up on the skip logic UI - what should happen if skip logic conditions are satisfied. Valid options are "Show" or "Hide"
          example: Show
          enum: [Show, Hide]
        gfsurveys__SkipLogicOperator__c:
          type: string
          description: Shows up on the skip logic UI - whether the skip logic is "All" or "Any".
          example: All
          enum: [All, Any]
        gfsurveys__SurveyLibrary__c:
          type: string
          description: The Form Library that the Question was downloaded from
        gfsurveys__SurveyVersion__c:
          type: string
          description: Each question will be individually linked with Form Version record.
        gfsurveys__Test_Dynamic_Operations__c:
          type: boolean
          description: Boolean value to check if user has added test data for dynamic operation on a question.
        gfsurveys__ToVersion__c:
          type: number
          description: Last version of the question, should be left empty if using the API.
        gfsurveys__Type__c:
          type: string
          description: 'The type of the question. Allowed values are: section, text-short, text-long, number, number-integer, number-decimal, date-date, date-datetime, barcode, radio, checkbox, static-content, end_of_survey, picture, signature, cascading-level, gps-location'
          enum: ['section',
                    'text-short',
                    'text-long',
                    'number',
                    'number-integer',
                    'number-decimal',
                    'date-date',
                    'date-datetime',
                    'barcode',
                    'radio',
                    'checkbox',
                    'static-content',
                    'end_of_survey',
                    'picture',
                    'signature',
                    'cascading-level',
                    'gps-location'
                    ]
          example: section
        gfsurveys__IsDraft__c:
          type: number
          description: Does the question belong to a form version that can be edited? (1 = True, 0 = False)
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    gfsurveys__SurveyMapping__cSObject:
      type: object
      properties:
        Id:
          type: string
        OwnerId:
          type: string
          description: ID of the assigned owner of the custom object record. If the custom object becomes the detail side of a master-detail relationship, this field is removed, as ownership of the data is controlled by the master object, or by the primary master object for a custom object with two master-detail relationships.Custom objects on the detail side of a master-detail relationship can't have sharing rules, manual sharing, or queues, as these require the Owner field.
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__IntervieweeApiField__c:
          type: string
        gfsurveys__IsReference__c:
          type: boolean
        gfsurveys__MatchingField__c:
          type: string
          description: Set this field to prevent duplicated records. The system will check into the "matching field", if the value for the "matching field" already exists it will update the record(not insert).
        gfsurveys__ObjectApiName__c:
          type: string
        gfsurveys__PPIScoreApiField__c:
          type: string
        gfsurveys__Repeat__c:
          type: string
        gfsurveys__SubmissionApiField__c:
          type: string
        gfsurveys__SurveyApiField__c:
          type: string
        gfsurveys__SurveyVersionApiField__c:
          type: string
        gfsurveys__SurveyVersion__c:
          type: string
        gfsurveys__Survey__c:
          type: string
        gfsurveys__SurveyorApiField__c:
          type: string
        gfsurveys__UseAsInterviewee__c:
          type: boolean
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    SaveResult:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              fields:
                type: array
                items:
                  type: string
              statusCode:
                type: string
              extendedErrorDetails:
                type: array
                items:
                  type: object
                  properties:
                    extendedErrorCode:
                      type: string
        warnings:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              statusCode:
                type: string
              extendedDetails:
                type: array
                items:
                  type: object
                  properties:
                    extendedErrorCode:
                      type: string
        infos:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              statusCode:
                type: string
              extendedDetails:
                type: array
                items:
                  type: object
                  properties:
                    extendedErrorCode:
                      type: string
    gfsurveys__ObjectRelationshipMapping__cSObject:
      type: object
      properties:
        Id:
          type: string
        OwnerId:
          type: string
          description: ID of the assigned owner of the custom object record. If the custom object becomes the detail side of a master-detail relationship, this field is removed, as ownership of the data is controlled by the master object, or by the primary master object for a custom object with two master-detail relationships.Custom objects on the detail side of a master-detail relationship can't have sharing rules, manual sharing, or queues, as these require the Owner field.
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__ChildSurveyMapping__c:
          type: string
          description: Id field of the form mapping to use for the child object
        gfsurveys__FieldApiName__c:
          type: string
          description: Which field in the parent object to relate to the child object
        gfsurveys__ParentSurveyMapping__c:
          type: string
          description: Id field of the form mapping to use for the parent object
        gfsurveys__Change_Log__c:
          type: number
          description: Deprecated, do not use.
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    gfsurveys__QuestionMapping__cSObject:
      type: object
      properties:
        Id:
          type: string
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__SurveyMapping__c:
          type: string
          description: Parent form mapping for this field mapping
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__FieldApiName__c:
          type: string
          description: Field api name of the object defined in the parent Form Answer, where will be saved the answer for the QuestionAnswer's related question question
        gfsurveys__IsBroken__c:
          type: boolean
          description: Deprecated field, should be ignored
        gfsurveys__Question__c:
          type: string
          description: Question Id field to use for the question mapping
        gfsurveys__ScoringGroup__c:
          type: string
          description: The scoring group to use for this question mapping if Scoring is required.
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
    gfsurveys__Option__cSObject:
      type: object
      properties:
        Id:
          type: string
        IsDeleted:
          type: boolean
        Name:
          type: string
          description: Identifier for the custom object record. This name appears in page layouts, related lists, lookup dialogs, search results, and key lists on tab home pages. By default, this field is added to the custom object page layout as a required field.
        CreatedDate:
          type: string
          format: date-time
        CreatedById:
          type: string
          description: ID of the user who created the record.
        LastModifiedDate:
          type: string
          format: date-time
        LastModifiedById:
          type: string
          description: ID of the user who most recently changed the record.
        SystemModstamp:
          type: string
          format: date-time
        gfsurveys__Question__c:
          type: string
          description: Parent question
        gfsurveys__API_External_Id__c:
          type: string
          description: unique external Id field for taroworks api
        gfsurveys__Caption__c:
          type: string
          description: Caption of the Option displayed to the user
        gfsurveys__OptionalCode__c:
          type: string
          description: Optional code for options on single and multi select questions
        gfsurveys__PPIScore__c:
          type: number
          description: The score that PpiScoreValue__c contains. This needs to be manually updated via a trigger each time the PpiScoreValue__c is changed. If PpiScoreValue__c is blank then this left blank. Should only be set by the trigger on ScoreValue__c
        gfsurveys__Position__c:
          type: number
          description: Position of the option within the option group
        gfsurveys__RemoteId__c:
          type: string
          description: The Id of Option as it is in the org that the group was downloaded from
        attributes:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
  securitySchemes:
    openIDConnectDiscovery:
      type: openIdConnect
      openIdConnectUrl: https://test.salesforce.com/.well-known/openid-configuration
    bearerAuth:
      type: http
      description: Use Session Id or Access Token as valid bearer token to authenticate with Salesforce. Access Token could be retrieved via any supported OAuth2 flows listed or not listed here (e.g. JWT Bearer Token Flow).To obtain a session ID, you can use the SOAP API login() call or through the Salesforce CLI.
      scheme: bearer
    oAuth2:
      type: oauth2
      description: 'For more information on all supported OAuth Flows, please see ''https://help.salesforce.com/articleView?id=remoteaccess_oauth_flows.htm&type=5''. For more information on all available scope options, please see ''https://help.salesforce.com/articleView?id=remoteaccess_oauth_tokens_scopes.htm&type=5#oauth_scopes''. '
      flows:
        implicit:
          authorizationUrl: https://test.salesforce.com/services/oauth2/authorize
          scopes:
            visualforce: Allows access to customer-created Visualforce pages only. This scope doesn’t allow access to standard Salesforce UIs.
            address: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            custom_permissions: Allows access to the custom permissions in an org associated with the connected app. This scope also shows whether the current user has each permission enabled.
            openid: Allows access to the current, logged in user’s unique identifier for OpenID Connect apps. In the OAuth 2.0 user-agent flow and the OAuth 2.0 web server flow, use the openid scope. In addition to the access token, this scope enables you to receive a signed ID token that conforms to the OpenID Connect specifications.
            profile: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            refresh_token: Allows a refresh token to be returned when the requesting client is eligible to receive one. With a refresh token, the app can interact with the user’s data while the user is offline. This token is synonymous with requesting offline_access.
            wave_api: Access and manage your Wave data.
            web: Allows use of the access_token on the web. This scope also includes visualforce, allowing access to customer-created Visualforce pages.
            phone: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            offline_access: Allows a refresh token to be returned when the requesting client is eligible to receive one. With a refresh token, the app can interact with the user’s data while the user is offline. This token is synonymous with requesting offline_access.
            chatter_api: Allows access to Connect REST API resources on behalf of the user.
            id: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            api: Allows access to the current, logged-in user’s account using APIs, such as REST API and Bulk API. This scope also includes chatter_api, which allows access to Connect REST API resources.
            eclair_api: Access and manage your Eclair data.
            email: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            pardot_api: Allows access to Pardot API services on behalf of the user. Manage the full extent of accessible services in Pardot.
            full: Allows access to all data accessible by the logged-in user, and encompasses all other scopes. full doesn’t return a refresh token. You must explicitly request the refresh_token scope to get a refresh token.
        password:
          tokenUrl: https://test.salesforce.com/services/oauth2/token
          scopes:
            api: Allows access to the current, logged-in user’s account using APIs, such as REST API and Bulk API. This scope also includes chatter_api, which allows access to Connect REST API resources.
        authorizationCode:
          authorizationUrl: https://test.salesforce.com/services/oauth2/authorize
          tokenUrl: https://test.salesforce.com/services/oauth2/token
          scopes:
            visualforce: Allows access to customer-created Visualforce pages only. This scope doesn’t allow access to standard Salesforce UIs.
            address: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            custom_permissions: Allows access to the custom permissions in an org associated with the connected app. This scope also shows whether the current user has each permission enabled.
            openid: Allows access to the current, logged in user’s unique identifier for OpenID Connect apps. In the OAuth 2.0 user-agent flow and the OAuth 2.0 web server flow, use the openid scope. In addition to the access token, this scope enables you to receive a signed ID token that conforms to the OpenID Connect specifications.
            profile: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            refresh_token: Allows a refresh token to be returned when the requesting client is eligible to receive one. With a refresh token, the app can interact with the user’s data while the user is offline. This token is synonymous with requesting offline_access.
            wave_api: Access and manage your Wave data.
            web: Allows use of the access_token on the web. This scope also includes visualforce, allowing access to customer-created Visualforce pages.
            phone: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            offline_access: Allows a refresh token to be returned when the requesting client is eligible to receive one. With a refresh token, the app can interact with the user’s data while the user is offline. This token is synonymous with requesting offline_access.
            chatter_api: Allows access to Connect REST API resources on behalf of the user.
            id: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            api: Allows access to the current, logged-in user’s account using APIs, such as REST API and Bulk API. This scope also includes chatter_api, which allows access to Connect REST API resources.
            eclair_api: Access and manage your Eclair data.
            email: Allows access to the identity URL service. You can request profile, email, address, or phone individually to get the same result as using id; they are all synonymous.
            pardot_api: Allows access to Pardot API services on behalf of the user. Manage the full extent of accessible services in Pardot.
            full: Allows access to all data accessible by the logged-in user, and encompasses all other scopes. full doesn’t return a refresh token. You must explicitly request the refresh_token scope to get a refresh token.
