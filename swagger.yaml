openapi: 3.0.0
info:
  title: TaroWorks API 
  version: 1.0.0
servers:
  - url: http://instance.develop.my.salesforce.com
paths:
  /services/oauth2/token:
    post:
      operationId: login
      tags:
        - default
      summary: Login - get access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
      security:
        - noauthAuth: []
      parameters:
        - name: grant_type
          in: query
          schema:
            type: string
          example: password
        - name: client_id
          in: query
          schema:
            type: string
          example: '{{clientid}}'
        - name: client_secret
          in: query
          schema:
            type: string
          example: '{{client_secret}}'
        - name: username
          in: query
          schema:
            type: string
          example: '{{username}}'
        - name: password
          in: query
          schema:
            type: string
          example: '{{password}}{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credentials"
  /services/apexrest/formdata/v1:
    put:
      operationId: upsertForms
      tags:
        - default
      summary: Form - upsert one or multiple forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          required: true
          example: PutFormData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getForms
      tags:
        - default
      summary: Form - get by limit and offset, name, or ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: GetFormData
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: name
          in: query
          schema:
            type: string
          example: my form
        - name: id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormSearch"
    delete:
      operationId: deleteForm
      tags:
        - default
      summary: Form - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_form_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/questiondata/v1:
    put:
      operationId: upsertQuestions
      tags:
        - default
      summary: Question - create one or more questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: PutQuestionData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getQuestions
      tags:
        - default
      summary: Question - get by limit and offset, name, or ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: GetQuestionData
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '17'
        - name: id
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: formVersionId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
        - name: formId
          in: query
          schema:
            type: string
          example: a0h4w00000QwnWTAAZ
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/QuestionSearch" 
    delete:
      operationId: deleteQuestion
      tags:
        - default
      summary: Question - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_question_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/formmappingdata/v1:
    get:
      operationId: getFormMapping
      tags:
        - default
      summary: Form/Field Mapping - Get by formId
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: GetFormMappingData
        - name: formId
          in: query
          schema:
            type: string
          example: a0hDn000000gLXeIAM
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    put:
      operationId: upsertFormMapping
      tags:
        - default
      summary: Form/Field Mapping - Insert New Form Mapping and Field Mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormMappingRecords" 
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: PutFormMappingData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/FormMappingSearch" 
    delete:
      operationId: deleteFormMapping
      tags:
        - default
      summary: Form Mapping - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_form_mapping_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/skiplogicdata/v1/:
    put:
      operationId: upsertSkipLogic
      tags:
        - default
      summary: Skip Logic - create/update SkipLogic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkipLogicRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: PutSkipLogicData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getSkipLogics
      tags:
        - default
      summary: Skip Logic - Get by Limit and Offset
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: GetSkipLogicData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/SkipLogicSearch" 
    delete:
      operationId: deleteSkipLogic
      tags:
        - default
      summary: Skip Logic - Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_skip_logic_id}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /services/apexrest/objectrelationshipmappingdata/v1:
    put:
      operationId: upsertObjectMapping
      tags:
        - default
      summary: ORM - insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectRelationshipMappingRecords"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: PutObjectRelationshipMappingData
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ResponseArray" 
    get:
      operationId: getObjectMapping
      tags:
        - default
      summary: ORM - get by Id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: objectType
          in: query
          schema:
            type: string
          example: GetObjectRelationshipMappingData
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_orm}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  $ref: "#/components/schemas/ObjectRelationshipMappingSearch" 
    delete:
      operationId: deleteObjectMapping
      tags:
        - default
      summary: ORM - delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: OAuth {{access_token}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          example: '{{current_orm}}'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
  schemas:
    FormRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/Form"
    QuestionRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/Question"
    SkipLogicRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/SkipLogic"
    FormMappingRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/FormMapping" 
    ObjectRelationshipMappingRecords:
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/ObjectRelationshipMapping"
    FormSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/Form"
      required:
        - filteredCount
        - unfilteredCount
        - records
    QuestionSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/Question"
      required:
        - filteredCount
        - unfilteredCount
        - records
    SkipLogicSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/SkipLogic"
      required:
        - filteredCount
        - unfilteredCount
        - records
    FormMappingSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/FormMapping"
      required:
        - filteredCount
        - unfilteredCount
        - records
    ObjectRelationshipMappingSearch:
      properties:
        filteredCount:
          type: integer
          example: 1
          description: Number of records found matching the search criteria. 
        unfilteredCount:
          type: integer
          example: 100
          description: Total number of records in SalesForce for this object, include those that don't match the search criteria. Used for paging.
        records:
          type: array
          items:
            $ref: "#/components/schemas/ObjectRelationshipMapping"
      required:
        - filteredCount
        - unfilteredCount
        - records
    Form:
      properties:
        externalId: 
          type: string
          example: '{{formtimestamp}}'
          description: UniqueID from the external system.
        id: 
          type: string
          example: "a0hDH0000069hqHYAQ"
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
        name: 
          type: string
          example: demo {{formtimestamp}}
          description: user-visible form name
        alias: 
          type: string
          example: demo {{formtimestamp}}
          description: The alias of the form, displayed to the admin user.
        messageAfterSubmission: 
          type: string
          example: Thank you for taking the time to complete this form!
          description: User-visible message on form completion
        description: 
          type: string
          example: This form was inserted through API on {{$timestamp}}
          description: admin-visible form description
        status: 
          type: string
          example: "Draft"
          description: Must be Draft or Updating
          enum: [
                  Draft, 
                  Updating, 
                  Published,
                  Closed
                ]
        formVersion:
          type: array
          items:
            $ref: "#/components/schemas/FormVersion"
    FormVersion:
      properties:
            versionid: 
              type: string
              description: SalesForce-generated VersionID of the form. This gets changed when you change the form state (like pressing "Publish" on a Draft Form)
              example: "a0hDH0000069hqHYAQ"
            changeLogNumber: 
              type: string
              example: "10"
              description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
    Question:
      properties:
          externalId: 
            type: string
            description: UniqueID from the external system.
            example: '{{formtimestamp}}S1'
          id: 
            type: string
            description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
            example: ""
          name: 
            type: string
            description: Name of the Question, used for internal references to this question.
            example: main family member
          caption: 
            type: string
            description: Name of the Question, visible to the App User.
            example: Main Family Member
          cascadingLevel: 
            type: string
            description: Used for cascading select questions - if this is a cascading select, use this to show the level in the cascading hierarcy.
            example: ""
          options: 
            type: array
            items:
              $ref: "#/components/schemas/Options"
          cascadingSelect: 
            type: string
            description: The Cascading Select that this question represents(only if the question is of cascading type)
            example: "{{cascadingSelectID}}"
          controllingQuestion: 
            type: string
            description: Only for Cascading Select - the controlling question of this question.
            example: ""
          displayRepeatSectionInTable: 
            type: boolean
            description: If this question is a repeat section, whether the repeat section is a table or not.  
            example: false
          dynamicOperationType: 
            type: string
            description: Calculation or Validation dynamic operation
            example: ""
          exampleOfValidResponse: 
            type: string
            description: Holds example of valid regular expression entered in response validation
            example: ""
          form: 
            type: string
            description: Which form this question is part of.
            example: '{{new_form_id}}'
          formVersion: 
            type: string
            description: Which form version this question is part of.
            example: '{{current_form_versionid}}'
          hidden: 
            type: boolean
            description: Whether to display the question to the app user or not.
            example: false
          maximum: 
            type: number 
            description: For Number questions - the maximum allowed value
            example: 0
          minimum: 
            type: number
            description: For Number questions - the minimum allowed value
            example: 10
          parent: 
            type: string
            description: Sections are parent questions. If a question has a parent, then it sits inside that section; if a question has no parent, then that question is a section.
            example: ""
          position: 
            type: integer
            description: Position of a question inside a section
            example: 1
          previousVersion: 
            type: string
            description: The previous form version for this question.
            example: ""
          printAnswer: 
            type: boolean
            description: Print answer(s) to mobile users
            example: false
          repeatSourceValue: 
            type: string
            description: Used for repeat section mapping - the controlling question sets the number of times that a repeat question is repeated.
            example: ""
          repeatTimes: 
            type: string
            description: Number of times to repeat
            example: ""
          required: 
            type: boolean
            description: Whether the question is required (app will not proceed without a value filled in for this question)
            example: true
          responseValidation: 
            type: string
            description: Any response validations to apply to this question (dynamic operations)
            example: ""
          showAllQuestionOnOnePage: 
            type: boolean
            description: For sections - whether to show all questions on one page or not
            example: false
          skipLogicBehavior: 
            type: string
            description: Shows up on the skip logic UI - what should happen if skip logic is fired
            example: Show
            enum: [Show, Hide]
          skipLogicOperator: 
            type: string
            description: Whether the skip logic is "All" or "Any"
            example: All
            enum: [All, Any]
          hint: 
            type: string
            description: The hint to display to the app user for this question
            example: ""
          testDynamicOperation: 
            type: boolean
            description: Whether to test the dynamic operations or not.
            example: false
          type: 
            type: string
            description: Type of the question. Allowed values are
            enum: ['section',
                    'text-short',
                    'text-long',
                    'number',
                    'number-integer',
                    'number-decimal',
                    'date-date',
                    'date-datetime',
                    'barcode',
                    'radio',
                    'checkbox',
                    'static-content',
                    'end_of_survey',
                    'picture',
                    'capture-audio',
                    'capture-video',
                    'signature',
                    'cascading-level',
                    'gps-location'
                    ]
            example: section
          useCurrentTimeAsDefault: 
            type: boolean
            description: Set date of the day and current time(take from device) as initial value
            example: false
          changeLogNumber: 
            type: string
            description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
            example: '{{current_form_change_log_number}}' 
    SkipLogic:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system. 
          example: '{{formtimestamp}}123467'
        form: 
          type: string
          description: Which form this skip logic is part of.
          example: '{{new_form_id}}'
        formVersion: 
          type: string
          description: Which form version this skip logic is part of.
          example: '{{current_form_versionid}}'
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        parentQuestion: 
          type: string
          description: The question that should be skipped based on this skip logic.
          example: '{{current_occupation_question_id}}'
        sourceQuestion: 
          type: string
          description: The question that is used to determine if the parent question should be skipped.
          example: '{{current_integer_question_id}}'
        negate: 
          type: string
          description: Whether the condition is negated 
          example: "false"
        condition: 
          type: string
          description: Allowable conditions for the skip logic to be fired. 
          example: Answered
          enum: ["Is","Answered","LesserThan","GreaterThan","InRange"]
        skipValue:
          type: string
          description: Explicit value to use with "Is" condition
          example: "testing"
    FormMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}FM1'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: new name
        form: 
          type: string
          description: Which form this Form Mapping is part of.
          example: '{{new_form_id}}'
        formVersion: 
          type: string
          description: Which form version this form mapping is part of.
          example: '{{current_form_versionid}}'
        formVersionMappingField: 
          type: string
          description: Api Field Name of the mapped object to save the Form Version data
          example: ""
        mobileUserField: 
          type: string
          description: Api Field Name of the mapped object to save the Mobile User data
          example: Name
        objectApiName: 
          type: string
          description: Which Object to use for the form mapping, specified by API Name
          example: Account
        formMappingField: 
          type: string
          description: Api Field Name of the mapped object to save the Form data
          example: ""
        IsReference: 
          type: boolean
          description: Whether the form mapping is a reference object or not.
          example: false
        matching: 
          type: string
          description: This field is used to prevent duplicate record creation when users sync data from mobile.  
          example: ""
        repeat: 
          type: string
          description: Which repeat section "id" field to use for this form mapping repeat.
          example: ""
        submissionAPIField: 
          type: string
          description: Api Field Name of the mapped object to save the Submission
          example: ""
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
        questionMappings:
          type: array
          items:
            $ref: "#/components/schemas/QuestionMapping" 
    QuestionMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}2'
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: age_becomes_account_number
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        scoringGroup: 
          type: string
          description: The scoring group used for this question mapping if Scoring is relevant.
          example: ""
        question: 
          type: string
          description: Question "id" field to use for the question mapping
          example: '{{current_integer_question_id}}'
        fieldAPIName: 
          type: string
          description: API Name of the SalesForce object to use for mapping the question.
          example: AccountNumber
    ObjectRelationshipMapping:
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}123-orm'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: inserted
        fieldApiName: 
          type: string
          description: Which field in the parent object to relate to the child object.
          example: AccountId
        parentSurveyMapping: 
          type: string
          description: id field of the form mapping to use for the parent object
          example: '{{current_form_mapping_id}}'
        childSurveyMapping: 
          type: string
          description: id field of the form mapping to use for the child object
          example: '{{current_repeat_form_mapping_id}}'
        formVersion: 
          type: string
          description: Which form version this ORM related to.
          example: '{{current_form_versionid}}'
        changeLogNumber: 
          type: string
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: '{{current_form_change_log_number}}'
    Response:
      properties:
        success:
          type: boolean
          description: Whether this object was created successfully
          example: true
        recordId:
          type: string
          description: SalesForce ID of the created object
          example: a0hDn000000jsRSIAY
        message:
          type: string
          description: Success or failure message
          example: "Form Created Successfully"
        externalId:
          type: string
          description: External ID of the created object
          example: 20221219113625
        changeLogNumber:
          type: integer 
          description: TaroWorks-generated Change Log Number. Increments on every form change (adding questions, sections, form mapping, etc.)
          example: 1 
    ResponseArray:
        type: array
        items: 
          $ref: "#/components/schemas/Response"
    Options: 
      properties:
        externalId: 
          type: string
          description: UniqueID from the external system.
          example: '{{formtimestamp}}123'
        id: 
          type: string
          description: Salesforce-generated ID. Leave blank to create new, pass in the salesforce ID to update.
          example: ""
        name: 
          type: string
          description: Salesforce-internal name, not seen by app users or admins.
          example: inserted
        position:
          type: integer
          description: Option position in list
          example: 1
        caption:
          type: string
          description: Value displayed to app user
          example: Female
    Credentials:
      properties:
        access_token:
          type: string
          description: An access token to include with future requests
        instance_url:
          type: string
          example: "http://instance.develop.my.salesforce.com"
          description: The Salesforce instance you're authorized against
        id:
          type: string
          example: "https://login.salesforce.com/id/123/abc"
          description: Your login ID
        token_type:
          type: string
          example: "Bearer"
          description: Type of Token
        issued_at:
          type: string
          example: "1673911057864"
          description: Timestamp of token issue
        signature:
          type: string
          example: "3PiFUIioqKkHpHxUiCCDzpvSiM2F6//w2/CslNTuf+o="
          description: Response signature for verification
      required:
        - access_token
        - instance_url
        - id
        - token_type
        - issued_at
        - signature