{
	"info": {
		"_postman_id": "1a69bae6-acd8-4a0d-843a-8fcc01ef849a",
		"name": "Salesforce APIs for TW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4246923"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - get access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"access_token\", data.access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/oauth2/token?grant_type=password&client_id={{clientid}}&client_secret={{client_secret}}&username={{username}}&password={{password}}{{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"oauth2",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "client_id",
									"value": "{{clientid}}"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}"
								},
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TWAPI Mimic without changelog",
			"item": [
				{
					"name": "Form - create one form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"new_form_id\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Get the current timestamp and use this as the name of the new form to create",
									"const moment = require('moment');",
									"pm.globals.set(\"formtimestamp\", moment().format(\"YYYYMMDDhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"API_External_Id__c\" : \"{{formtimestamp}}\",\r\n            \"name\": \"demo {{formtimestamp}}\",\r\n            \"Alias__c\": \"demo {{formtimestamp}}\",\r\n            \"Close_Message__c\": \"Thank you for taking the time to complete this form!\",\r\n            \"Description__c\": \"This form was inserted through API on {{$timestamp}}\",\r\n            \"Status__c\": \"Draft\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Survey__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Survey__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form - get by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"At least one form found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Alias\");",
									"});",
									"",
									"pm.test(\"Form has content\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Thank you for\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Survey__c/{{new_form_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Survey__c",
								"{{new_form_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form - update by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated-demo {{formtimestamp}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Survey__c/{{new_form_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Survey__c",
								"{{new_form_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "MUST RUN - Form - get by Query with FormVersion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"new_form_version_id\", data.records[0].SurveyVersions__r.records[0].Id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"At least one form found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Alias\");",
									"});",
									"",
									"pm.test(\"Form has content\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Thank you for\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All), (SELECT FIELDS(ALL) FROM SurveyVersions__r LIMIT 200) FROM Survey__c where id = '{{new_form_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All), (SELECT FIELDS(ALL) FROM SurveyVersions__r LIMIT 200) FROM Survey__c where id = '{{new_form_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FormVersion - get by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"At least one form found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CloseReason\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SurveyVersion__c/{{new_form_version_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SurveyVersion__c",
								"{{new_form_version_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "FormVersion - get by Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp For FormVersion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].SystemModstamp)",
									"",
									"postman.setGlobalVariable(\"current_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT SystemModStamp FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - create one Section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"section_1_id\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"section1\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"S1\",\r\n    \"CascadingLevel__c\": null,\r\n    \"CascadingSelect__c\": null,\r\n    \"ControllingQuestion__c\": null,\r\n    \"CurrentTime__c\": false,\r\n    \"DoAfter__c\": null,\r\n    \"DoBefore__c\": null,\r\n    \"DynamicOperationType__c\": null,\r\n    \"DynamicOperation__c\": null,\r\n    \"Dynamic_Operation_Test_Data__c\": null,\r\n    \"Hidden__c\": false,\r\n    \"Hint__c\": null,\r\n    \"IsRemoteEditable__c\": false,\r\n    \"IsRepeatInTable__c\": false,\r\n    \"MaxInstance__c\": 0.0,\r\n    \"Maximum__c\": null,\r\n    \"Minimum__c\": null,\r\n    \"Parent__c\": null,\r\n    \"Position__c\": 1.0,\r\n    \"RepeatSourceValue__c\": null,\r\n    \"RepeatTimes__c\": null,\r\n    \"Required__c\": false,\r\n    \"ResponseValidationExample__c\": null,\r\n    \"ResponseValidation__c\": null,\r\n    \"SamePage__c\": false,\r\n    \"SkipLogicBehavior__c\": null,\r\n    \"SkipLogicOperator__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Test_Dynamic_Operations__c\": false,\r\n    \"Type__c\": \"section\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - create one Question in section",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"question_1_id\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"question1\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"Q1\",\r\n    \"CascadingLevel__c\": null,\r\n    \"CascadingSelect__c\": null,\r\n    \"ControllingQuestion__c\": null,\r\n    \"CurrentTime__c\": false,\r\n    \"DoAfter__c\": null,\r\n    \"DoBefore__c\": null,\r\n    \"DynamicOperationType__c\": null,\r\n    \"DynamicOperation__c\": null,\r\n    \"Dynamic_Operation_Test_Data__c\": null,\r\n    \"Hidden__c\": false,\r\n    \"Hint__c\": null,\r\n    \"IsRemoteEditable__c\": false,\r\n    \"IsRepeatInTable__c\": false,\r\n    \"MaxInstance__c\": 0.0,\r\n    \"Maximum__c\": null,\r\n    \"Minimum__c\": null,\r\n    \"Parent__c\": \"{{section_1_id}}\",\r\n    \"Position__c\": 1.0,\r\n    \"RepeatSourceValue__c\": null,\r\n    \"RepeatTimes__c\": null,\r\n    \"Required__c\": false,\r\n    \"ResponseValidationExample__c\": null,\r\n    \"ResponseValidation__c\": null,\r\n    \"SamePage__c\": false,\r\n    \"SkipLogicBehavior__c\": null,\r\n    \"SkipLogicOperator__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Test_Dynamic_Operations__c\": false,\r\n    \"Type__c\": \"text-short\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - create multiple Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"section_2_id\", data.results[0].id);",
									"postman.setGlobalVariable(\"question_2_id\", data.results[1].id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.hasErrors).to.eql(false);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"records\" :[\r\n{\r\n      \"attributes\": {\r\n        \"type\": \"Question__c\",\r\n        \"referenceId\": \"section_2_id\"\r\n    },\r\n    \"Name\": \"section2\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"S2\",\r\n    \"CascadingLevel__c\": null,\r\n    \"CascadingSelect__c\": null,\r\n    \"ControllingQuestion__c\": null,\r\n    \"CurrentTime__c\": false,\r\n    \"DoAfter__c\": null,\r\n    \"DoBefore__c\": null,\r\n    \"DynamicOperationType__c\": null,\r\n    \"DynamicOperation__c\": null,\r\n    \"Dynamic_Operation_Test_Data__c\": null,\r\n    \"Hidden__c\": false,\r\n    \"Hint__c\": null,\r\n    \"IsRemoteEditable__c\": false,\r\n    \"IsRepeatInTable__c\": false,\r\n    \"MaxInstance__c\": 0.0,\r\n    \"Maximum__c\": null,\r\n    \"Minimum__c\": null,\r\n    \"Parent__c\": null,\r\n    \"Position__c\": 2.0,\r\n    \"RepeatSourceValue__c\": null,\r\n    \"RepeatTimes__c\": null,\r\n    \"Required__c\": false,\r\n    \"ResponseValidationExample__c\": null,\r\n    \"ResponseValidation__c\": null,\r\n    \"SamePage__c\": false,\r\n    \"SkipLogicBehavior__c\": null,\r\n    \"SkipLogicOperator__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Test_Dynamic_Operations__c\": false,\r\n    \"Type__c\": \"section\"\r\n},\r\n{\r\n     \"attributes\": {\r\n        \"type\": \"Question__c\",\r\n        \"referenceId\": \"question_2_id\"\r\n    },\r\n    \"Name\": \"question2\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"Q2\",\r\n    \"CascadingLevel__c\": null,\r\n    \"CascadingSelect__c\": null,\r\n    \"ControllingQuestion__c\": null,\r\n    \"CurrentTime__c\": false,\r\n    \"DoAfter__c\": null,\r\n    \"DoBefore__c\": null,\r\n    \"DynamicOperationType__c\": null,\r\n    \"DynamicOperation__c\": null,\r\n    \"Dynamic_Operation_Test_Data__c\": null,\r\n    \"Hidden__c\": false,\r\n    \"Hint__c\": null,\r\n    \"IsRemoteEditable__c\": false,\r\n    \"IsRepeatInTable__c\": false,\r\n    \"MaxInstance__c\": 0.0,\r\n    \"Maximum__c\": null,\r\n    \"Minimum__c\": null,\r\n    \"Parent__c\": \"@{section_2_id.id}\",\r\n    \"Position__c\": 1.0,\r\n    \"RepeatSourceValue__c\": null,\r\n    \"RepeatTimes__c\": null,\r\n    \"Required__c\": false,\r\n    \"ResponseValidationExample__c\": null,\r\n    \"ResponseValidation__c\": null,\r\n    \"SamePage__c\": false,\r\n    \"SkipLogicBehavior__c\": null,\r\n    \"SkipLogicOperator__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Test_Dynamic_Operations__c\": false,\r\n    \"Type__c\": \"text-short\"\r\n}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/tree/Question__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								"tree",
								"Question__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - create Question with Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"question_3_id\", data.results[0].id);",
									"postman.setGlobalVariable(\"option_1_id\", data.results[1].id);",
									"postman.setGlobalVariable(\"option_2_id\", data.results[2].id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.hasErrors).to.eql(false);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"records\" :[\r\n{\r\n     \"attributes\": {\r\n        \"type\": \"Question__c\",\r\n        \"referenceId\": \"question_3_id\"\r\n    },\r\n    \"Name\": \"question3\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"Q3\",\r\n    \"CascadingLevel__c\": null,\r\n    \"CascadingSelect__c\": null,\r\n    \"ControllingQuestion__c\": null,\r\n    \"CurrentTime__c\": false,\r\n    \"DoAfter__c\": null,\r\n    \"DoBefore__c\": null,\r\n    \"DynamicOperationType__c\": null,\r\n    \"DynamicOperation__c\": null,\r\n    \"Dynamic_Operation_Test_Data__c\": null,\r\n    \"Hidden__c\": false,\r\n    \"Hint__c\": null,\r\n    \"IsRemoteEditable__c\": false,\r\n    \"IsRepeatInTable__c\": false,\r\n    \"MaxInstance__c\": 0.0,\r\n    \"Maximum__c\": null,\r\n    \"Minimum__c\": null,\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"Position__c\": 2.0,\r\n    \"RepeatSourceValue__c\": null,\r\n    \"RepeatTimes__c\": null,\r\n    \"Required__c\": false,\r\n    \"ResponseValidationExample__c\": null,\r\n    \"ResponseValidation__c\": null,\r\n    \"SamePage__c\": false,\r\n    \"SkipLogicBehavior__c\": null,\r\n    \"SkipLogicOperator__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Test_Dynamic_Operations__c\": false,\r\n    \"Type__c\": \"radio\",\r\n    \"Options__r\" : {\r\n      \"records\" : [{\r\n         \"attributes\" : {\"type\" : \"Option__c\", \"referenceId\" : \"option_1\"},\r\n         \"Name\" : \"o1\",\r\n         \"API_External_Id__c\": null,\r\n         \"Caption__c\": \"O1\",\r\n         \"Position__c\": 1.0\r\n         },{\r\n         \"attributes\" : {\"type\" : \"Option__c\", \"referenceId\" : \"option_2\"},\r\n         \"Name\" : \"o2\",\r\n         \"API_External_Id__c\": null,\r\n         \"Caption__c\": \"O2\",\r\n         \"Position__c\": 2.0\r\n         }]\r\n      }\r\n}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/tree/Question__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								"tree",
								"Question__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Option - create one Option",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"option_3_id\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\" : \"o3\",\r\n    \"API_External_Id__c\": null,\r\n    \"Caption__c\": \"O3\",\r\n    \"Position__c\": 3.0,\r\n    \"Question__c\": \"{{question_3_id}}\"\r\n      }\r\n      ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Option__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Option__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Option - update an Option",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Caption__c\": \"updated-O3\"\r\n}\r\n      ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Option__c/{{option_3_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Option__c",
								"{{option_3_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - get by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"At least one form found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CurrentTime\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c/{{section_1_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c",
								"{{section_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - get by Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM Question__c  where SurveyVersion__c = '{{new_form_version_id}}' and Type__c = 'section' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM Question__c  where SurveyVersion__c = '{{new_form_version_id}}' and Type__c = 'section' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - get by FormVersion with Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All), (SELECT FIELDS(All) FROM Options__r LIMIT 200) FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All), (SELECT FIELDS(All) FROM Options__r LIMIT 200) FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - get by limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM Question__c  LIMIT 200 OFFSET 0",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM Question__c  LIMIT 200 OFFSET 0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Option - get by limit and offset Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM Option__c LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM Option__c LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Mapping - create Form Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"form_mapping_account\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"a0f03000001S3oC\",\r\n    \"API_External_Id__c\": null,\r\n    \"IntervieweeApiField__c\": null,\r\n    \"IsReference__c\": false,\r\n    \"MatchingField__c\": \"Name\",\r\n    \"ObjectApiName__c\": \"Account\",\r\n    \"PPIScoreApiField__c\": null,\r\n    \"Repeat__c\": null,\r\n    \"SubmissionApiField__c\": null,\r\n    \"SurveyApiField__c\": null,\r\n    \"SurveyVersionApiField__c\": null,\r\n    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n    \"Survey__c\": \"{{new_form_id}}\",\r\n    \"SurveyorApiField__c\": null,\r\n    \"UseAsInterviewee__c\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SurveyMapping__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SurveyMapping__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Field Mapping - create Field Mapping Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"field_mapping_account\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"Name\": \"a0R03000006YZId\",\r\n\"SurveyMapping__c\": \"{{form_mapping_account}}\",\r\n\"API_External_Id__c\": null,\r\n\"FieldApiName__c\": \"Name\",\r\n\"IsBroken__c\": false,\r\n\"Question__c\": \"{{question_1_id}}\",\r\n\"ScoringGroup__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/QuestionMapping__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"QuestionMapping__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Mapping - create Form and Field Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"form_mapping_contact\", data.results[0].id);",
									"postman.setGlobalVariable(\"field_mapping_contact_1\", data.results[1].id);",
									"postman.setGlobalVariable(\"field_mapping_contact_2\", data.results[2].id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.hasErrors).to.eql(false);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"records\" :[\r\n{\r\n     \"attributes\": {\r\n        \"type\": \"SurveyMapping__c\",\r\n        \"referenceId\": \"contact_survey_mapping\"\r\n    },\r\n            \"Name\": \"a0f03000001S3oD\",\r\n            \"API_External_Id__c\": null,\r\n            \"IntervieweeApiField__c\": null,\r\n            \"IsReference__c\": false,\r\n            \"MatchingField__c\": \"LastName\",\r\n            \"ObjectApiName__c\": \"Contact\",\r\n            \"PPIScoreApiField__c\": null,\r\n            \"Repeat__c\": null,\r\n            \"SubmissionApiField__c\": null,\r\n            \"SurveyApiField__c\": null,\r\n            \"SurveyVersionApiField__c\": null,\r\n            \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n            \"Survey__c\": \"{{new_form_id}}\",\r\n            \"SurveyorApiField__c\": null,\r\n            \"UseAsInterviewee__c\": false,\r\n    \"QuestionMappings__r\" : {\r\n      \"records\" : [{\r\n         \"attributes\" : {\"type\" : \"QuestionMapping__c\", \"referenceId\" : \"contact_question_mapping_last\"},\r\n         \"Name\": \"a0R03000006YZIe\",\r\n        \"API_External_Id__c\": null,\r\n        \"FieldApiName__c\": \"LastName\",\r\n        \"Question__c\": \"{{question_2_id}}\"\r\n         },{\r\n         \"attributes\" : {\"type\" : \"QuestionMapping__c\", \"referenceId\" : \"contact_question_mapping_first\"},\r\n         \"Name\": \"a0R03000006YZIf\",\r\n        \"API_External_Id__c\": null,\r\n        \"FieldApiName__c\": \"FirstName\",\r\n        \"Question__c\": \"{{question_3_id}}\"\r\n         }]\r\n      }\r\n}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/tree/SurveyMapping__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								"tree",
								"SurveyMapping__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Mapping - get by limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All), (SELECT FIELDS(All) FROM QuestionMappings__r LIMIT 200) FROM SurveyMapping__c LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All), (SELECT FIELDS(All) FROM QuestionMappings__r LIMIT 200) FROM SurveyMapping__c LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Mapping - get by FormVersion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All), (SELECT FIELDS(All) FROM QuestionMappings__r LIMIT 200) FROM SurveyMapping__c WHERE SurveyVersion__c='{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All), (SELECT FIELDS(All) FROM QuestionMappings__r LIMIT 200) FROM SurveyMapping__c WHERE SurveyVersion__c='{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Object Relationship Mapping - Create ORM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"object_relationship_mapping\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"a0J03000002apQ1\",\r\n    \"API_External_Id__c\": null,\r\n    \"ChildSurveyMapping__c\": \"{{form_mapping_contact}}\",\r\n    \"FieldApiName__c\": \"AccountId\",\r\n    \"ParentSurveyMapping__c\": \"{{form_mapping_account}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/ObjectRelationshipMapping__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"ObjectRelationshipMapping__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Object Relationship Mapping - get by limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM ObjectRelationshipMapping__c LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM ObjectRelationshipMapping__c LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Object Relationship Mapping - get by Form Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM ObjectRelationshipMapping__c WHERE ParentSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' OR ChildSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM ObjectRelationshipMapping__c WHERE ParentSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' OR ChildSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Skip Condition - Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"skip_condition_1\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SkipCondition__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SkipCondition__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skip Condition - Get by limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM SkipCondition__c LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM SkipCondition__c LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Skip Condition - Get by Form Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM SkipCondition__c WHERE Parent__r.SurveyVersion__c = '{{new_form_version_id}}' OR SourceQuestion__r.SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All) FROM SkipCondition__c WHERE Parent__r.SurveyVersion__c = '{{new_form_version_id}}' OR SourceQuestion__r.SurveyVersion__c = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Demo - SystemModStamp Atomic Update",
			"item": [
				{
					"name": "SHOULD FAIL - Update Question with Old Systemmodstamp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 412\", function () {",
									"    pm.response.to.have.status(412);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Caption__c\": \"updated-S1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c/{{section_1_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c",
								"{{section_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp for Questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"current_systemmodstamp\", current_systemmodstamp.toUTCString());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - Update Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Caption__c\": \"updated-S1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c/{{section_1_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c",
								"{{section_1_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SystemModStamp in All Requests",
			"item": [
				{
					"name": "Form - create one form Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"new_form_id\", data.id);",
									"",
									"pm.test(\"No error on create\", function () {",
									"    pm.expect(data.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Get the current timestamp and use this as the name of the new form to create",
									"const moment = require('moment');",
									"pm.globals.set(\"formtimestamp\", moment().format(\"YYYYMMDDhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"API_External_Id__c\" : \"{{formtimestamp}}\",\r\n            \"name\": \"demo {{formtimestamp}}\",\r\n            \"Alias__c\": \"demo {{formtimestamp}}\",\r\n            \"Close_Message__c\": \"Thank you for taking the time to complete this form!\",\r\n            \"Description__c\": \"This form was inserted through API on {{$timestamp}}\",\r\n            \"Status__c\": \"Draft\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Survey__c",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Survey__c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FormVersion by Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"new_form_version_id\", data.records[0].SurveyVersions__r.records[0].Id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"At least one form found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Alias\");",
									"});",
									"",
									"pm.test(\"Form has content\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Thank you for\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All), (SELECT FIELDS(ALL) FROM SurveyVersions__r LIMIT 200) FROM Survey__c where id = '{{new_form_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT FIELDS(All), (SELECT FIELDS(ALL) FROM SurveyVersions__r LIMIT 200) FROM Survey__c where id = '{{new_form_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"current_systemmodstamp\", current_systemmodstamp.toUTCString());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Survey__c where id = '{{new_form_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Survey__c where id = '{{new_form_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Transactional Form Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var new_latest_mod_date = new Date(data.compositeResponse.at(-1).body.records[0].SystemModstamp)",
									"postman.setGlobalVariable(\"current_systemmodstamp\",new_latest_mod_date.toUTCString())",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"allOrNone\" : true,\r\n   \"collateSubrequests\" : false,\r\n   \"compositeRequest\" : [\r\n      {\r\n         \"method\" : \"PATCH\",\r\n         \"httpHeaders\": {\r\n            \"If-Unmodified-Since\": \"{{current_systemmodstamp}}\"\r\n        },\r\n         \"url\" : \"/services/data/v{{version}}/sobjects/Survey__c/{{new_form_id}}\",\r\n         \"body\" : {\r\n                \"API_External_Id__c\" : \"{{formtimestamp}}\"\r\n            },\r\n         \"referenceId\" : \"patchFormToCheckSystemModStamp\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n                {\r\n                    \"attributes\": {\r\n                        \"type\": \"Question__c\"\r\n                    },\r\n                    \"Name\": \"section1\",\r\n                    \"Survey__c\": \"{{new_form_id}}\",\r\n                    \"API_External_Id__c\": null,\r\n                    \"Caption__c\": \"S1\",\r\n                    \"CascadingLevel__c\": null,\r\n                    \"CascadingSelect__c\": null,\r\n                    \"ControllingQuestion__c\": null,\r\n                    \"CurrentTime__c\": false,\r\n                    \"DoAfter__c\": null,\r\n                    \"DoBefore__c\": null,\r\n                    \"DynamicOperationType__c\": null,\r\n                    \"DynamicOperation__c\": null,\r\n                    \"Dynamic_Operation_Test_Data__c\": null,\r\n                    \"Hidden__c\": false,\r\n                    \"Hint__c\": null,\r\n                    \"IsRemoteEditable__c\": false,\r\n                    \"IsRepeatInTable__c\": false,\r\n                    \"MaxInstance__c\": 0.0,\r\n                    \"Maximum__c\": null,\r\n                    \"Minimum__c\": null,\r\n                    \"Parent__c\": null,\r\n                    \"Position__c\": 1.0,\r\n                    \"RepeatSourceValue__c\": null,\r\n                    \"RepeatTimes__c\": null,\r\n                    \"Required__c\": false,\r\n                    \"ResponseValidationExample__c\": null,\r\n                    \"ResponseValidation__c\": null,\r\n                    \"SamePage__c\": false,\r\n                    \"SkipLogicBehavior__c\": \"Hide\",\r\n                    \"SkipLogicOperator__c\": \"Any\",\r\n                    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                    \"Test_Dynamic_Operations__c\": false,\r\n                    \"Type__c\": \"section\"\r\n                },\r\n                {\r\n                    \"attributes\": {\r\n                        \"type\": \"Question__c\"\r\n                    },\r\n                    \"Name\": \"section2\",\r\n                    \"Survey__c\": \"{{new_form_id}}\",\r\n                    \"API_External_Id__c\": null,\r\n                    \"Caption__c\": \"S2\",\r\n                    \"CascadingLevel__c\": null,\r\n                    \"CascadingSelect__c\": null,\r\n                    \"ControllingQuestion__c\": null,\r\n                    \"CurrentTime__c\": false,\r\n                    \"DoAfter__c\": null,\r\n                    \"DoBefore__c\": null,\r\n                    \"DynamicOperationType__c\": null,\r\n                    \"DynamicOperation__c\": null,\r\n                    \"Dynamic_Operation_Test_Data__c\": null,\r\n                    \"Hidden__c\": false,\r\n                    \"Hint__c\": null,\r\n                    \"IsRemoteEditable__c\": false,\r\n                    \"IsRepeatInTable__c\": false,\r\n                    \"MaxInstance__c\": 0.0,\r\n                    \"Maximum__c\": null,\r\n                    \"Minimum__c\": null,\r\n                    \"Parent__c\": null,\r\n                    \"Position__c\": 2.0,\r\n                    \"RepeatSourceValue__c\": null,\r\n                    \"RepeatTimes__c\": null,\r\n                    \"Required__c\": false,\r\n                    \"ResponseValidationExample__c\": null,\r\n                    \"ResponseValidation__c\": null,\r\n                    \"SamePage__c\": false,\r\n                    \"SkipLogicBehavior__c\": \"Hide\",\r\n                    \"SkipLogicOperator__c\": \"Any\",\r\n                    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                    \"Test_Dynamic_Operations__c\": false,\r\n                    \"Type__c\": \"section\"\r\n                }]},\r\n         \"referenceId\" : \"parentQuestions\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n                {\r\n                    \"attributes\": {\r\n                        \"type\": \"Question__c\"\r\n                    },\r\n                    \"Name\": \"question1\",\r\n                    \"Survey__c\": \"{{new_form_id}}\",\r\n                    \"API_External_Id__c\": null,\r\n                    \"Caption__c\": \"Q1\",\r\n                    \"CascadingLevel__c\": null,\r\n                    \"CascadingSelect__c\": null,\r\n                    \"ControllingQuestion__c\": null,\r\n                    \"CurrentTime__c\": false,\r\n                    \"DoAfter__c\": null,\r\n                    \"DoBefore__c\": null,\r\n                    \"DynamicOperationType__c\": null,\r\n                    \"DynamicOperation__c\": null,\r\n                    \"Dynamic_Operation_Test_Data__c\": null,\r\n                    \"Hidden__c\": false,\r\n                    \"Hint__c\": null,\r\n                    \"IsRemoteEditable__c\": false,\r\n                    \"IsRepeatInTable__c\": false,\r\n                    \"MaxInstance__c\": 0.0,\r\n                    \"Maximum__c\": null,\r\n                    \"Minimum__c\": null,\r\n                    \"Parent__c\": \"@{parentQuestions[0].id}\",\r\n                    \"Position__c\": 1.0,\r\n                    \"RepeatSourceValue__c\": null,\r\n                    \"RepeatTimes__c\": null,\r\n                    \"Required__c\": false,\r\n                    \"ResponseValidationExample__c\": null,\r\n                    \"ResponseValidation__c\": null,\r\n                    \"SamePage__c\": false,\r\n                    \"SkipLogicBehavior__c\": \"Hide\",\r\n                    \"SkipLogicOperator__c\": \"Any\",\r\n                    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                    \"Test_Dynamic_Operations__c\": false,\r\n                    \"Type__c\": \"text-short\"\r\n                },\r\n                {\r\n                    \"attributes\": {\r\n                        \"type\": \"Question__c\"\r\n                    },\r\n                    \"Name\": \"question2\",\r\n                    \"Survey__c\": \"{{new_form_id}}\",\r\n                    \"API_External_Id__c\": null,\r\n                    \"Caption__c\": \"Q2\",\r\n                    \"CascadingLevel__c\": null,\r\n                    \"CascadingSelect__c\": null,\r\n                    \"ControllingQuestion__c\": null,\r\n                    \"CurrentTime__c\": false,\r\n                    \"DoAfter__c\": null,\r\n                    \"DoBefore__c\": null,\r\n                    \"DynamicOperationType__c\": null,\r\n                    \"DynamicOperation__c\": null,\r\n                    \"Dynamic_Operation_Test_Data__c\": null,\r\n                    \"Hidden__c\": false,\r\n                    \"Hint__c\": null,\r\n                    \"IsRemoteEditable__c\": false,\r\n                    \"IsRepeatInTable__c\": false,\r\n                    \"MaxInstance__c\": 0.0,\r\n                    \"Maximum__c\": null,\r\n                    \"Minimum__c\": null,\r\n                    \"Parent__c\": \"@{parentQuestions[1].id}\",\r\n                    \"Position__c\": 1.0,\r\n                    \"RepeatSourceValue__c\": null,\r\n                    \"RepeatTimes__c\": null,\r\n                    \"Required__c\": false,\r\n                    \"ResponseValidationExample__c\": null,\r\n                    \"ResponseValidation__c\": null,\r\n                    \"SamePage__c\": false,\r\n                    \"SkipLogicBehavior__c\": \"Hide\",\r\n                    \"SkipLogicOperator__c\": \"Any\",\r\n                    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                    \"Test_Dynamic_Operations__c\": false,\r\n                    \"Type__c\": \"text-short\"\r\n                },\r\n                {\r\n                    \"attributes\": {\r\n                        \"type\": \"Question__c\"\r\n                    },\r\n                    \"Name\": \"question3\",\r\n                    \"Survey__c\": \"{{new_form_id}}\",\r\n                    \"API_External_Id__c\": null,\r\n                    \"Caption__c\": \"Q3\",\r\n                    \"CascadingLevel__c\": null,\r\n                    \"CascadingSelect__c\": null,\r\n                    \"ControllingQuestion__c\": null,\r\n                    \"CurrentTime__c\": false,\r\n                    \"DoAfter__c\": null,\r\n                    \"DoBefore__c\": null,\r\n                    \"DynamicOperationType__c\": null,\r\n                    \"DynamicOperation__c\": null,\r\n                    \"Dynamic_Operation_Test_Data__c\": null,\r\n                    \"Hidden__c\": false,\r\n                    \"Hint__c\": null,\r\n                    \"IsRemoteEditable__c\": false,\r\n                    \"IsRepeatInTable__c\": false,\r\n                    \"MaxInstance__c\": 0.0,\r\n                    \"Maximum__c\": null,\r\n                    \"Minimum__c\": null,\r\n                    \"Parent__c\": \"@{parentQuestions[1].id}\",\r\n                    \"Position__c\": 2.0,\r\n                    \"RepeatSourceValue__c\": null,\r\n                    \"RepeatTimes__c\": null,\r\n                    \"Required__c\": false,\r\n                    \"ResponseValidationExample__c\": null,\r\n                    \"ResponseValidation__c\": null,\r\n                    \"SamePage__c\": false,\r\n                    \"SkipLogicBehavior__c\": \"Hide\",\r\n                    \"SkipLogicOperator__c\": \"Any\",\r\n                    \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                    \"Test_Dynamic_Operations__c\": false,\r\n                    \"Type__c\": \"radio\"\r\n                }]},\r\n         \"referenceId\" : \"childQuestions\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"Option__c\"\r\n                },\r\n                \"Name\": \"o1\",\r\n                \"Question__c\": \"@{childQuestions[2].id}\",\r\n                \"Caption__c\": \"O1\",\r\n                \"Position__c\": 1.0\r\n            },\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"Option__c\"\r\n                },\r\n                \"Name\": \"o2\",\r\n                \"Question__c\": \"@{childQuestions[2].id}\",\r\n                \"Caption__c\": \"O2\",\r\n                \"Position__c\": 2.0\r\n            }\r\n            ]},\r\n         \"referenceId\" : \"options\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"SurveyMapping__c\"\r\n                },\r\n                \"MatchingField__c\": \"Name\",\r\n                \"ObjectApiName__c\": \"Account\",\r\n                \"Repeat__c\": null,\r\n                \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                \"Survey__c\": \"{{new_form_id}}\"\r\n            },\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"SurveyMapping__c\"\r\n                },\r\n                \"MatchingField__c\": \"LastName\",\r\n                \"ObjectApiName__c\": \"Contact\",\r\n                \"Repeat__c\": null,\r\n                \"SurveyVersion__c\": \"{{new_form_version_id}}\",\r\n                \"Survey__c\": \"{{new_form_id}}\"\r\n            }\r\n            ]},\r\n         \"referenceId\" : \"formMapping\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"QuestionMapping__c\"\r\n                },\r\n                \"SurveyMapping__c\": \"@{formMapping[0].id}\",\r\n                \"FieldApiName__c\": \"Name\",\r\n                \"Question__c\": \"@{childQuestions[0].id}\"\r\n            },\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"QuestionMapping__c\"\r\n                },\r\n                \"SurveyMapping__c\": \"@{formMapping[1].id}\",\r\n                \"FieldApiName__c\": \"FirstName\",\r\n                \"Question__c\": \"@{childQuestions[1].id}\"\r\n            },\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"QuestionMapping__c\"\r\n                },\r\n                \"SurveyMapping__c\": \"@{formMapping[1].id}\",\r\n                \"FieldApiName__c\": \"LastName\",\r\n                \"Question__c\": \"@{childQuestions[2].id}\"\r\n            }\r\n            ]},\r\n         \"referenceId\" : \"FieldMapping\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"SkipCondition__c\"\r\n                },\r\n                \"Parent__c\": \"@{parentQuestions[1].id}\",\r\n                \"API_External_Id__c\": null,\r\n                \"Condition__c\": \"Is\",\r\n                \"Negate__c\": false,\r\n                \"RemoteId__c\": null,\r\n                \"SkipValue__c\": \"Hello\",\r\n                \"SourceQuestion__c\": \"@{childQuestions[0].id}\",\r\n                \"SurveyLibrary__c\": null,\r\n                \"Value__c\": null\r\n            }\r\n            ]},\r\n         \"referenceId\" : \"skipCondition\"\r\n      },\r\n      {\r\n         \"method\" : \"POST\",\r\n         \"url\" : \"/services/data/v{{version}}/composite/sobjects\",\r\n         \"body\" : {\r\n            \"records\" :[\r\n            {\r\n                \"attributes\": {\r\n                    \"type\": \"ObjectRelationshipMapping__c\"\r\n                },\r\n                \"ChildSurveyMapping__c\": \"@{formMapping[1].id}\",\r\n                \"FieldApiName__c\": \"AccountId\",\r\n                \"ParentSurveyMapping__c\": \"@{formMapping[0].id}\" \r\n            }\r\n            ]},\r\n         \"referenceId\" : \"objectRelationshipMapping\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM Survey__c where id = '{{new_form_id}}' LIMIT 1\",\r\n         \"referenceId\" : \"getNewLatestSystemModStamp\"\r\n      }\r\n   ]\r\n}\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OCD SystemModStamp Checks",
			"item": [
				{
					"name": "Get latest systemmodstamp 2 of 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var dates = []",
									"dates.push(new Date(pm.globals.get(\"latest_systemmodstamp\")))",
									"",
									"if (data.compositeResponse[0].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[0].body.records[0].SystemModstamp))",
									"} if (data.compositeResponse[1].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[1].body.records[0].SystemModstamp))",
									"} if (data.compositeResponse[2].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[2].body.records[0].SystemModstamp))",
									"}",
									"var maxDate=new Date(Math.max.apply(null,dates));",
									"postman.setGlobalVariable(\"current_systemmodstamp\",maxDate.toUTCString())"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"allOrNone\" : true,\r\n   \"collateSubrequests\" : false,\r\n   \"compositeRequest\" : [\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp   FROM SurveyMapping__c where SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"formMapping\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp   FROM QuestionMapping__c where SurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"fieldMapping\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp   FROM ObjectRelationshipMapping__c where ChildSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"objectRelationshipMapping\"\r\n      }\r\n   ]\r\n}\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest systemmodstamp 1 of 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var dates = []",
									"dates.push(new Date(data.compositeResponse[0].body.records[0].SystemModstamp))",
									"dates.push( new Date(data.compositeResponse[1].body.records[0].SystemModstamp))",
									"",
									"if (data.compositeResponse[2].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[2].body.records[0].SystemModstamp))",
									"} if (data.compositeResponse[3].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[3].body.records[0].SystemModstamp))",
									"} if (data.compositeResponse[4].body.records[0]){",
									"dates.push(new Date(data.compositeResponse[4].body.records[0].SystemModstamp))",
									"}",
									"var maxDate=new Date(Math.max.apply(null,dates));",
									"postman.setGlobalVariable(\"latest_systemmodstamp\",maxDate.toISOString())"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "If-Unmodified-Since",
								"value": "{{current_systemmodstamp}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"allOrNone\" : true,\r\n   \"collateSubrequests\" : false,\r\n   \"compositeRequest\" : [\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM Survey__c where id = '{{new_form_id}}' LIMIT 1\",\r\n         \"referenceId\" : \"survey\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 1\",\r\n         \"referenceId\" : \"surveyVersion\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"question\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp   FROM Option__c where Question__r.SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"option\"\r\n      },\r\n      {\r\n         \"method\" : \"GET\",\r\n         \"url\" : \"/services/data/v{{version}}/query/?q=SELECT SystemModStamp   FROM SkipCondition__c where Parent__r.SurveyVersion__c = '{{new_form_version_id}}' ORDER BY SystemModStamp DESC LIMIT 1\",\r\n         \"referenceId\" : \"skipCondition\"\r\n      }\r\n   ]\r\n}\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/composite/",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"composite",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp For FormVersion Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].SystemModstamp)",
									"",
									"postman.setGlobalVariable(\"formversion_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT SystemModStamp FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT SystemModStamp FROM SurveyVersion__c where id = '{{new_form_version_id}}' LIMIT 200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp Aggregate for Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"questions_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Question__c where SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp Aggregate for Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"options_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Option__c where Question__r.SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM Option__c where Question__r.SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp Aggregate for Skip Condition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"skipcondition_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM SkipCondition__c where Parent__r.SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM SkipCondition__c where Parent__r.SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp for Form Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"formmapping_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM SurveyMapping__c where SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM SurveyMapping__c where SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp Aggregate for Field Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"fieldmapping_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM QuestionMapping__c where SurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM QuestionMapping__c where SurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh SystemModStamp Aggregate for Object Relationship Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"current_systemmodstamp = new Date(data.records[0].AggregateSystemModstamp)",
									"",
									"postman.setGlobalVariable(\"fieldmapping_systemmodstamp\", current_systemmodstamp);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/query/?q=SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM ObjectRelationshipMapping__c where ChildSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"query",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "SELECT Max(SystemModStamp)  AggregateSystemModstamp FROM ObjectRelationshipMapping__c where ChildSurveyMapping__r.SurveyVersion__c = '{{new_form_version_id}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Form",
			"item": [
				{
					"name": "Skip Condition - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SkipCondition__c/{{skip_condition_1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SkipCondition__c",
								"{{skip_condition_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Object Relationship Mapping - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/ObjectRelationshipMapping__c/{{object_relationship_mapping}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"ObjectRelationshipMapping__c",
								"{{object_relationship_mapping}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Field Mapping - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/QuestionMapping__c/{{field_mapping_contact_2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"QuestionMapping__c",
								"{{field_mapping_contact_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Mapping - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SurveyMapping__c/{{form_mapping_contact}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SurveyMapping__c",
								"{{form_mapping_contact}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Option - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Option__c/{{option_3_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Option__c",
								"{{option_3_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Question - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Question__c/{{question_3_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Question__c",
								"{{question_3_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form Version - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/SurveyVersion__c/{{new_form_version_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"SurveyVersion__c",
								"{{new_form_version_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Form - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "OAuth {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parent__c\": \"{{section_2_id}}\",\r\n    \"API_External_Id__c\": null,\r\n    \"Condition__c\": \"Is\",\r\n    \"Negate__c\": false,\r\n    \"RemoteId__c\": null,\r\n    \"SkipValue__c\": \"Hello\",\r\n    \"SourceQuestion__c\": \"{{question_1_id}}\",\r\n    \"SurveyLibrary__c\": null,\r\n    \"Value__c\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/data/v{{version}}/sobjects/Survey__c/{{new_form_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"data",
								"v{{version}}",
								"sobjects",
								"Survey__c",
								"{{new_form_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}