{
	"info": {
		"_postman_id": "3b7091dc-6c47-4b05-8070-b12e4463f6e0",
		"name": "TaroWorks - Simulate Edit Published Form",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login - get access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"access_token\", data.access_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/oauth2/token?grant_type=password&client_id={{clientid}}&client_secret={{client_secret}}&username={{username}}&password={{password}}{{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"oauth2",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "client_id",
							"value": "{{clientid}}"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}"
						},
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - create one form",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_form_id\", data[0].recordId);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"successful\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Get the current timestamp and use this as the name of the new form to create",
							"const moment = require('moment');",
							"pm.globals.set(\"formtimestamp\", moment().format(\"YYYYMMDDhhmmss\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"externalId\" : \"{{formtimestamp}}\",\r\n            \"id\": \"\",\r\n            \"name\": \"demo {{formtimestamp}}\",\r\n            \"alias\": \"demo {{formtimestamp}}\",\r\n            \"messageAfterSubmission\": \"Thank you for taking the time to complete this form!\",\r\n            \"description\": \"This form was inserted through API on {{$timestamp}}\",\r\n            \"status\": \"Draft\",\r\n            \"formVersion\": [\r\n                {\r\n                    \"versionid\": \"\",\r\n                    \"changeLogNumber\": \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=PutFormData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutFormData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh form info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_section_id\", data[0].recordId);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n      \"externalId\": \"S1\",\r\n      \"id\": \"\",\r\n      \"name\": \"main family member\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"Main Family Member\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"\",\r\n      \"position\": 1,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"section\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Question in section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_integer_question_id\", data[0].recordId);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*",
							"Supported question types are:",
							"'text-short'",
							"'text-long'",
							"'number'",
							"'number-integer'",
							"'number-decimal'",
							"'date-date'",
							"'date-datetime'",
							"'barcode'",
							"'radio'",
							"'checkbox'",
							"'static-content'",
							"'end_of_survey'",
							"'picture'",
							"'capture-audio'",
							"'capture-video'",
							"'signature'",
							"'cascading-level'",
							"'gps-location'",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n      \"externalId\": \"Q1\",\r\n      \"id\": \"\",\r\n      \"name\": \"enter your age\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"enter your age\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"{{current_section_id}}\",\r\n      \"position\": 1,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"number-integer\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Placeholder - User Interaction (Press \"Publish\", then \"Edit\")",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Form - Refresh Version ID after manual interaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Refresh Section ID and Question ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_section_id\", data.records[0].id);",
							"postman.setGlobalVariable(\"current_integer_question_id\", data.records[1].id);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"At least one question found\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"RequestData\":[{\"StartNumber\":0, \"EndNumber\":10}]}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=GetQuestionData&formVersionId={{current_form_versionid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetQuestionData"
						},
						{
							"key": "formVersionId",
							"value": "{{current_form_versionid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Repeat Section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_repeat_section\", data[0].recordId);",
							"",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n      \"externalId\": \"RS1\",\r\n      \"id\": \"\",\r\n      \"name\": \"Children\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"Children Details\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": true,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"\",\r\n      \"position\": 2,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"{{current_integer_question_id}}\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": true,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"repeat\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Question with Options",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_radio_button_question\", data[1].recordId);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"    pm.expect(data[1].error).to.eql(false);",
							"    pm.expect(data[2].error).to.eql(false);",
							"    pm.expect(data[3].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n      \"externalId\": \"Q2\",\r\n      \"id\": \"\",\r\n      \"name\": \"gender\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"gender\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [\r\n        {\r\n          \"externalId\": \"O1\",\r\n          \"id\": \"\",\r\n          \"name\": \"male\",\r\n          \"position\": 1,\r\n          \"caption\": \"male\"\r\n        },{\r\n          \"externalId\": \"O2\",\r\n          \"id\": \"\",\r\n          \"name\": \"female\",\r\n          \"position\": 2,\r\n          \"caption\": \"female\"\r\n        },{\r\n          \"externalId\": \"O3\",\r\n          \"id\": \"\",\r\n          \"name\": \"other\",\r\n          \"position\": 3,\r\n          \"caption\": \"other\"\r\n        }\r\n      ],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"{{current_repeat_section}}\",\r\n      \"position\": 1,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"radio\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Multiple Questions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"    pm.expect(data[1].error).to.eql(false);",
							"    pm.expect(data[2].error).to.eql(false);",
							"    pm.expect(data[3].error).to.eql(false);",
							"    pm.expect(data[4].error).to.eql(false);",
							"    pm.expect(data[5].error).to.eql(false);",
							"    pm.expect(data[6].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n      \"externalId\": \"NS1\",\r\n      \"id\": \"\",\r\n      \"name\": \"best friend details\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"Best Friend Details\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"\",\r\n      \"position\": 3,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"section\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    },\r\n    {\r\n      \"externalId\": \"NQ1\",\r\n      \"id\": \"\",\r\n      \"name\": \"best friend age\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"Best Friend Age\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"NS1\",\r\n      \"position\": 1,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"number-integer\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    },\r\n    {\r\n      \"externalId\": \"NRS1\",\r\n      \"id\": \"\",\r\n      \"name\": \"best friend children\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"Best Friend Children\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": true,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"\",\r\n      \"position\": 4,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": true,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"repeat\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    },\r\n    {\r\n      \"externalId\": \"NRSQ1\",\r\n      \"id\": \"\",\r\n      \"name\": \"address\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"address\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"NRS1\",\r\n      \"position\": 1,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"text-long\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    },\r\n    {\r\n      \"externalId\": \"NQ2\",\r\n      \"id\": \"\",\r\n      \"name\": \"gender best friend children\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"gender\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [\r\n        {\r\n          \"externalId\": \"NO1\",\r\n          \"id\": \"\",\r\n          \"name\": \"male-2\",\r\n          \"position\": 1,\r\n          \"caption\": \"male-2\"\r\n        },{\r\n          \"externalId\": \"NO2\",\r\n          \"id\": \"\",\r\n          \"name\": \"female-2\",\r\n          \"position\": 2,\r\n          \"caption\": \"female-2\"\r\n        },{\r\n          \"externalId\": \"NO3\",\r\n          \"id\": \"\",\r\n          \"name\": \"other-2\",\r\n          \"position\": 3,\r\n          \"caption\": \"other-2\"\r\n        }\r\n      ],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"NS1\",\r\n      \"position\": 2,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"radio\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Create Questions for existing Section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setGlobalVariable(\"current_occupation_question_id\", data[1].recordId);",
							"postman.setGlobalVariable(\"current_first_name_question_id\", data[2].recordId);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"    pm.expect(data[1].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"records\": [\r\n    {\r\n            \"externalId\":\"S1\",\r\n            \"id\": \"{{current_section_id}}\",\r\n            \"name\": \"your details\",\r\n            \"canbeDownloadedInTheEditForm\": false,\r\n            \"caption\": \"Your Details\",\r\n            \"cascadingLevel\": \"\",\r\n            \"cascadingSelect\": \"\",\r\n            \"controllingQuestion\": \"\",\r\n            \"displayRepeatSectionInTable\": false,\r\n            \"doAfter\": \"\",\r\n            \"doBefore\": \"\",\r\n            \"dynamicOperationType\": \"\",\r\n            \"exampleOfValidResponse\": \"\",\r\n            \"firstVersion\": 1,\r\n            \"form\": \"{{new_form_id}}\",\r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"hidden\": false,\r\n            \"maximum\": 0.000000,\r\n            \"maxInstance\": 0,\r\n            \"minimum\": 0.000000,\r\n            \"parent\": \"\",\r\n            \"position\": 1,\r\n            \"ppiResultField\": \"\",\r\n            \"previousVersion\": \"\",\r\n            \"printAnswer\": false,\r\n            \"remoteId\": \"\",\r\n            \"remoteLibrary\": \"\",\r\n            \"remoteServerId\": \"\",\r\n            \"repeatSourceValue\": \"\",\r\n            \"repeatTimes\": \"\",\r\n            \"required\": true,\r\n            \"responseValidation\": \"\",\r\n            \"showAllQuestionOnOnePage\": false,\r\n            \"skipLogicBehavior\": \"Show\",\r\n            \"skipLogicOperator\": \"All\",\r\n            \"hint\": \"\",\r\n            \"testDynamicOperation\": false,\r\n            \"type\": \"section\",\r\n            \"useCurrentTimeAsDefault\": false,\r\n            \"changeLogNumber\": \"{{current_form_change_log_number}}\",\r\n            \"options\": []\r\n        },\r\n        {\r\n      \"externalId\": \"Q3\",\r\n      \"id\": \"\",\r\n      \"name\": \"enter_your_Occupation\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"enter_your_Occupation\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"S1\",\r\n      \"position\": 2,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"text-long\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    },\r\n    {\r\n      \"externalId\": \"Q4\",\r\n      \"id\": \"\",\r\n      \"name\": \"enter_your_first_name\",\r\n      \"canbeDownloadedInTheEditForm\": false,\r\n      \"caption\": \"enter_your_first_name\",\r\n      \"cascadingLevel\": \"\",\r\n      \"options\": [],\r\n      \"cascadingSelect\": \"\",\r\n      \"controllingQuestion\": \"\",\r\n      \"displayRepeatSectionInTable\": false,\r\n      \"doAfter\": \"\",\r\n      \"doBefore\": \"\",\r\n      \"dynamicOperationType\": \"\",\r\n      \"exampleOfValidResponse\": \"\",\r\n      \"firstVersion\": 1,\r\n      \"form\": \"{{new_form_id}}\",\r\n      \"formVersion\": \"{{current_form_versionid}}\",\r\n      \"hidden\": false,\r\n      \"maximum\": \"\",\r\n      \"maxInstance\": 0,\r\n      \"minimum\": \"\",\r\n      \"parent\": \"S1\",\r\n      \"position\": 3,\r\n      \"ppiResultField\": \"\",\r\n      \"previousVersion\": \"\",\r\n      \"printAnswer\": false,\r\n      \"remoteId\": \"\",\r\n      \"remoteLibrary\": \"\",\r\n      \"remoteServerId\": \"\",\r\n      \"repeatSourceValue\": \"\",\r\n      \"repeatTimes\": \"\",\r\n      \"required\": true,\r\n      \"responseValidation\": \"\",\r\n      \"showAllQuestionOnOnePage\": false,\r\n      \"skipLogicBehavior\": \"Show\",\r\n      \"skipLogicOperator\": \"All\",\r\n      \"hint\": \"\",\r\n      \"testDynamicOperation\": false,\r\n      \"type\": \"text-long\",\r\n      \"useCurrentTimeAsDefault\": false,\r\n      \"changeLogNumber\": \"{{current_form_change_log_number}}\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Question - Update Repeat Section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"pm.test(\"No error on create\", function () {",
							"    pm.expect(data[0].error).to.eql(false);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful string in response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"updated successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"records\": [\r\n        {\r\n            \"externalId\":\"RS1\",\r\n            \"id\": \"{{current_repeat_section}}\",\r\n            \"name\": \"your children details\",\r\n            \"canbeDownloadedInTheEditForm\": false,\r\n            \"caption\": \"Your Children Details\",\r\n            \"cascadingLevel\": \"\",\r\n            \"cascadingSelect\": \"\",\r\n            \"controllingQuestion\": \"\",\r\n            \"displayRepeatSectionInTable\": true,\r\n            \"doAfter\": \"\",\r\n            \"doBefore\": \"\",\r\n            \"dynamicOperationType\": \"\",\r\n            \"exampleOfValidResponse\": \"\",\r\n            \"firstVersion\": 1,\r\n            \"form\": \"{{new_form_id}}\",\r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"hidden\": false,\r\n            \"maximum\": 0.000000,\r\n            \"maxInstance\": 0,\r\n            \"minimum\": 0.000000,\r\n            \"parent\": \"\",\r\n            \"position\": 2,\r\n            \"ppiResultField\": \"\",\r\n            \"previousVersion\": \"\",\r\n            \"printAnswer\": false,\r\n            \"remoteId\": \"\",\r\n            \"remoteLibrary\": \"\",\r\n            \"remoteServerId\": \"\",\r\n            \"repeatSourceValue\": \"\",\r\n            \"repeatTimes\": \"3\",\r\n            \"required\": true,\r\n            \"responseValidation\": \"\",\r\n            \"showAllQuestionOnOnePage\": true,\r\n            \"skipLogicBehavior\": \"Show\",\r\n            \"skipLogicOperator\": \"All\",\r\n            \"hint\": \"\",\r\n            \"testDynamicOperation\": false,\r\n            \"type\": \"repeat\",\r\n            \"useCurrentTimeAsDefault\": false,\r\n            \"changeLogNumber\": \"{{current_form_change_log_number}}\",\r\n            \"options\": []\r\n        }\r\n        \r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/questiondata/v1?objectType=PutQuestionData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"questiondata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutQuestionData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form Mapping - Create Form Mapping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"current_form_mapping_id\", data[0].recordId);\r",
							"postman.setGlobalVariable(\"current_question_mapping_id\", data[1].recordId);\r",
							"\r",
							"\r",
							"pm.test(\"No error on create\", function () {\r",
							"    pm.expect(data[0].error).to.eql(false);\r",
							"    pm.expect(data[1].error).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful string in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"externalId\":\"1\",\r\n            \"id\": \"\",\r\n            \"name\": \"new name\",\r\n            \"form\": \"{{new_form_id}}\",\r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"formVersionMappingField\": \"\",\r\n            \"mobileUserField\": \"Name\",\r\n            \"patScoreMappingField\": \"\",\r\n            \"objectApiName\": \"Account\",\r\n            \"formMappingField\": \"\",\r\n            \"intervieweeMapField\": \"\",\r\n            \"IsReference\": false,\r\n            \"matching\": \"\",\r\n            \"repeat\": \"\",\r\n            \"useAsInterviewee\": false,\r\n            \"submissionAPIField\": \"\",\r\n            \"changeLogNumber\": \"{{current_form_change_log_number}}\",\r\n            \"questionMappings\": [\r\n                {\r\n                    \"externalId\":\"2\",\r\n                    \"name\": \"age_becomes_account_number\",\r\n                    \"id\": \"\",\r\n                    \"scoringGroup\": \"\",\r\n                    \"question\": \"{{current_integer_question_id}}\",\r\n                    \"isBroken\": true,\r\n                    \"fieldAPIName\": \"AccountNumber\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/formmappingdata/v1?objectType=PutFormMappingData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formmappingdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutFormMappingData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form Mapping - Create Form Mapping Inside Repeat Section",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"No error on create\", function () {\r",
							"    pm.expect(data[0].error).to.eql(false);\r",
							"    pm.expect(data[1].error).to.eql(false);\r",
							"    pm.expect(data[2].error).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful string in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"externalId\":\"1\",\r\n            \"id\": \"\",\r\n            \"name\": \"new contact\",\r\n            \"form\": \"{{new_form_id}}\",\r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"formVersionMappingField\": \"\",\r\n            \"mobileUserField\": \"\",\r\n            \"patScoreMappingField\": \"\",\r\n            \"objectApiName\": \"Contact\",\r\n            \"formMappingField\": \"\",\r\n            \"intervieweeMapField\": \"\",\r\n            \"IsReference\": false,\r\n            \"matching\": \"\",\r\n            \"repeat\": \"{{current_repeat_section}}\",\r\n            \"useAsInterviewee\": false,\r\n            \"submissionAPIField\": \"\",\r\n            \"changeLogNumber\": \"{{current_form_change_log_number}}\",\r\n            \"questionMappings\": [\r\n                {\r\n                    \"externalId\":\"3\",\r\n                    \"name\": \"occupation\",\r\n                    \"id\": \"\",\r\n                    \"scoringGroup\": \"\",\r\n                    \"question\": \"{{current_occupation_question_id}}\",\r\n                    \"isBroken\": true,\r\n                    \"fieldAPIName\": \"Description\"\r\n                },\r\n                {\r\n                    \"externalId\":\"4\",\r\n                    \"name\": \"name\",\r\n                    \"id\": \"\",\r\n                    \"scoringGroup\": \"\",\r\n                    \"question\": \"{{current_integer_question_id}}\",\r\n                    \"isBroken\": true,\r\n                    \"fieldAPIName\": \"Title\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/formmappingdata/v1?objectType=PutFormMappingData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formmappingdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutFormMappingData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form Mapping - Update Form Mapping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"No error on create\", function () {\r",
							"    pm.expect(data[0].error).to.eql(false);\r",
							"    pm.expect(data[1].error).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful string in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"updated successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"externalId\":\"1\",\r\n            \"id\": \"{{current_form_mapping_id}}\",\r\n            \"name\": \"updated 1234 updates\",\r\n            \"form\": \"{{new_form_id}}\",\r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"formVersionMappingField\": \"\",\r\n            \"mobileUserField\": \"Name\",\r\n            \"PATScoreMappingField\": \"\",\r\n            \"ObjectApiName\": \"Account\",\r\n            \"formMappingField\": \"\",\r\n            \"intervieweeMapField\": \"\",\r\n            \"IsReference\": false,\r\n            \"matching\": \"\",\r\n            \"repeat\": \"\",\r\n            \"useAsInterviewee\": false,\r\n            \"submissionMapField\": \"\",\r\n            \"changeLogNumber\": \"{{current_form_change_log_number}}\",\r\n            \"questionMappings\": [\r\n                {\r\n                    \"externalId\":\"2\",\r\n                    \"name\": \"updated\",\r\n                    \"id\": \"{{current_question_mapping_id}}\",\r\n                    \"scoringGroup\": \"\",\r\n                    \"question\": \"{{current_integer_question_id}}\",\r\n                    \"isBroken\": true,\r\n                    \"fieldAPIName\": \"AccountNumber\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/services/apexrest/formmappingdata/v1?objectType=PutFormMappingData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formmappingdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutFormMappingData"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Form - refresh change log number 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"current_form_versionid\", data.records[0].formVersion[0].versionid);",
							"postman.setGlobalVariable(\"current_form_change_log_number\", data.records[0].formVersion[0].changeLogNumber);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/services/apexrest/formdata/v1?objectType=GetFormData&id={{new_form_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"formdata",
						"v1"
					],
					"query": [
						{
							"key": "objectType",
							"value": "GetFormData"
						},
						{
							"key": "id",
							"value": "{{new_form_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Skip Logic - create skip logic",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"current_skip_logic_id\", data[0].recordId);\r",
							"\r",
							"pm.test(\"No error on create\", function () {\r",
							"    pm.expect(data[0].error).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful string in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"created successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "OAuth {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"records\": [\r\n        \r\n        \r\n\t\t{\r\n            \"externalId\":\"123467\",\r\n            \"form\": \"{{new_form_id}}\", \r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"changeLogNumber\":\"{{current_form_change_log_number}}\",\r\n            \"id\": \"\",\r\n            \"parentQuestion\": \"{{current_occupation_question_id}}\",\r\n            \"sourceQuestion\": \"{{current_integer_question_id}}\",\r\n            \"negate\":\"false\",\r\n            \"condition\": \"Answered\"\r\n        }\r\n,\r\n        {\r\n            \"externalId\":\"12346712\",\r\n            \"form\": \"{{new_form_id}}\", \r\n            \"formVersion\": \"{{current_form_versionid}}\",\r\n            \"changeLogNumber\":\"{{current_form_change_log_number}}\",\r\n            \"id\": \"\",\r\n            \"parentQuestion\": \"{{current_first_name_question_id}}\",\r\n            \"sourceQuestion\": \"{{current_occupation_question_id}}\",\r\n            \"negate\":\"false\",\r\n            \"condition\": \"Is\",\r\n            \"skipValue\": \"testing\"\r\n        }\r\n    ]\r\n}   "
				},
				"url": {
					"raw": "{{url}}/services/apexrest/skiplogicdata/v1/?objectType=PutSkipLogicData",
					"host": [
						"{{url}}"
					],
					"path": [
						"services",
						"apexrest",
						"skiplogicdata",
						"v1",
						""
					],
					"query": [
						{
							"key": "objectType",
							"value": "PutSkipLogicData"
						}
					]
				}
			},
			"response": []
		}
	]
}